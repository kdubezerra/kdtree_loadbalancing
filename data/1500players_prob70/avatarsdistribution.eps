%!PS-Adobe-2.0 EPSF-2.0
%%Title: avatarsdistribution.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Wed Feb  2 23:23:45 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avatarsdistribution.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (Eduardo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  2 23:23:45 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 320 50 lineto 320 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
624 320 M
63 0 V
4424 0 R
-63 0 V
stroke
528 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
624 886 M
63 0 V
4424 0 R
-63 0 V
stroke
528 886 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
624 1452 M
63 0 V
4424 0 R
-63 0 V
stroke
528 1452 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MRshow
1.000 UL
LTb
624 2018 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2018 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
624 2584 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2584 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
1.000 UL
LTb
624 3150 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3150 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
1.000 UL
LTb
624 3716 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3716 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
1.000 UL
LTb
624 4282 M
63 0 V
4424 0 R
-63 0 V
stroke
528 4282 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
624 320 M
0 63 V
0 4176 R
0 -63 V
stroke
624 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1223 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1223 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
1822 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1822 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MCshow
1.000 UL
LTb
2421 320 M
0 63 V
0 4176 R
0 -63 V
stroke
2421 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MCshow
1.000 UL
LTb
3020 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3020 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MCshow
1.000 UL
LTb
3619 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3619 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MCshow
1.000 UL
LTb
4218 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4218 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MCshow
1.000 UL
LTb
4817 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4817 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
2867 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (1500 players, 3 hotspots, 70% chance of choosing one as waypoint)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
2958 4186 Pls
3371 3970 Pls
3621 1554 Pls
4561 3016 Pls
2599 4411 Pls
1693 3883 Pls
3885 1285 Pls
2458 3831 Pls
2639 1233 Pls
4732 3214 Pls
4952 2994 Pls
1929 2856 Pls
3394 2355 Pls
4069 3543 Pls
2884 929 Pls
738 2536 Pls
4482 2801 Pls
3597 2642 Pls
3447 1027 Pls
4706 2498 Pls
3611 3788 Pls
4157 3577 Pls
4662 3211 Pls
2649 3791 Pls
4070 1853 Pls
2463 4086 Pls
2446 4350 Pls
4990 2948 Pls
2692 2757 Pls
2857 3301 Pls
3217 4131 Pls
2992 4176 Pls
2709 1696 Pls
3122 4095 Pls
2853 3236 Pls
4488 3249 Pls
4743 3199 Pls
1857 3274 Pls
2771 3953 Pls
2839 3348 Pls
4717 3089 Pls
4488 2836 Pls
2247 4358 Pls
2724 1958 Pls
4811 2067 Pls
4002 2672 Pls
4880 3014 Pls
4779 2932 Pls
4205 3171 Pls
2685 3709 Pls
3761 1436 Pls
4963 2972 Pls
4231 3463 Pls
2217 905 Pls
841 4141 Pls
1112 1423 Pls
5040 2935 Pls
2751 3713 Pls
4129 1696 Pls
2775 3446 Pls
3224 2409 Pls
4661 2643 Pls
1723 642 Pls
3980 2436 Pls
3155 2258 Pls
3181 4204 Pls
3429 2281 Pls
1565 2324 Pls
3364 2339 Pls
2515 4347 Pls
5023 3145 Pls
2001 2908 Pls
2944 2731 Pls
2265 1350 Pls
2596 4079 Pls
3528 3828 Pls
4809 3169 Pls
3954 963 Pls
2850 3554 Pls
1002 2041 Pls
3420 2364 Pls
3084 2783 Pls
4915 2948 Pls
4947 2998 Pls
2967 3146 Pls
2476 3532 Pls
4890 2962 Pls
1311 4276 Pls
4902 2967 Pls
1586 1268 Pls
3328 3636 Pls
4085 2691 Pls
3218 2400 Pls
3129 4037 Pls
3432 2947 Pls
2754 2321 Pls
4943 3038 Pls
3983 2601 Pls
4748 2299 Pls
3220 2398 Pls
2667 2706 Pls
4798 2922 Pls
4958 3086 Pls
3177 2340 Pls
2222 2271 Pls
2784 3307 Pls
4388 524 Pls
4842 2438 Pls
4740 2837 Pls
2598 4442 Pls
4350 2751 Pls
2504 3977 Pls
2531 4358 Pls
4546 863 Pls
3043 2418 Pls
3805 3443 Pls
2916 2533 Pls
4953 2974 Pls
4158 3488 Pls
3736 3698 Pls
3131 2644 Pls
2932 2328 Pls
3444 2866 Pls
4837 3076 Pls
2712 1846 Pls
3541 3799 Pls
2581 4392 Pls
3943 3471 Pls
3701 2571 Pls
2859 3357 Pls
4444 3297 Pls
3434 2768 Pls
3551 2381 Pls
3574 2527 Pls
4262 3401 Pls
4859 3024 Pls
1001 3909 Pls
2823 3367 Pls
3602 3134 Pls
4496 3333 Pls
4957 1753 Pls
2542 4348 Pls
3944 1571 Pls
4239 3097 Pls
4517 3206 Pls
3773 1776 Pls
2950 4201 Pls
3049 1873 Pls
4460 2797 Pls
3557 427 Pls
2573 3303 Pls
2263 3349 Pls
3243 2847 Pls
2611 4075 Pls
3224 2402 Pls
2576 4397 Pls
1811 1476 Pls
4270 2245 Pls
3777 3749 Pls
3116 2678 Pls
2577 4191 Pls
3092 3018 Pls
3902 3626 Pls
3537 2007 Pls
2603 4227 Pls
3884 3642 Pls
4609 3178 Pls
4695 3149 Pls
3366 2809 Pls
2703 2592 Pls
4656 3241 Pls
5046 2928 Pls
2105 3764 Pls
3038 4251 Pls
3702 3169 Pls
2703 4234 Pls
4713 2998 Pls
3498 2399 Pls
1538 2450 Pls
4953 2994 Pls
2473 4340 Pls
2736 3740 Pls
4379 1613 Pls
1864 1720 Pls
2419 4355 Pls
2423 2972 Pls
3228 2403 Pls
4938 2842 Pls
2632 2887 Pls
4065 3846 Pls
4419 2771 Pls
2583 694 Pls
3310 3983 Pls
3266 3944 Pls
2893 4149 Pls
1863 1569 Pls
3240 3198 Pls
4745 2829 Pls
2517 3322 Pls
4861 3048 Pls
4005 3578 Pls
3217 2393 Pls
3196 2464 Pls
2600 4455 Pls
2557 1712 Pls
4126 3277 Pls
4390 2813 Pls
2960 3488 Pls
2889 4221 Pls
2799 1160 Pls
2462 4282 Pls
4302 2744 Pls
3113 2753 Pls
3792 3693 Pls
2632 4047 Pls
2269 1695 Pls
2145 1224 Pls
3898 2903 Pls
2748 1520 Pls
2627 4440 Pls
3103 2960 Pls
1675 1037 Pls
4639 2879 Pls
2562 4182 Pls
3224 2404 Pls
2541 2851 Pls
2216 2415 Pls
2904 1785 Pls
2640 4358 Pls
4321 2479 Pls
1712 1597 Pls
4155 2716 Pls
4949 2997 Pls
3445 4058 Pls
2554 4364 Pls
4321 2778 Pls
3679 2771 Pls
4112 2666 Pls
2869 4201 Pls
3188 2510 Pls
2164 2912 Pls
4423 3367 Pls
3824 3666 Pls
2819 1623 Pls
2936 3108 Pls
3089 1942 Pls
1256 2551 Pls
4692 3123 Pls
2434 2176 Pls
4495 2815 Pls
3441 2372 Pls
4952 2998 Pls
3368 2349 Pls
4927 3569 Pls
4510 3412 Pls
4726 2928 Pls
3783 2636 Pls
2582 4391 Pls
3531 3811 Pls
2688 3877 Pls
1946 2866 Pls
4955 2988 Pls
4843 3171 Pls
3413 3907 Pls
3364 2938 Pls
3998 3616 Pls
3673 2558 Pls
4871 3278 Pls
4332 2740 Pls
2913 4149 Pls
4755 4055 Pls
4998 3494 Pls
4302 2474 Pls
4123 4384 Pls
4297 3400 Pls
3684 1743 Pls
4687 2399 Pls
3053 3151 Pls
1261 1214 Pls
2648 4280 Pls
3209 2429 Pls
2587 4116 Pls
2580 4280 Pls
2580 4393 Pls
3620 3771 Pls
2618 2266 Pls
3157 3900 Pls
3027 2734 Pls
3625 1660 Pls
4850 2942 Pls
4062 1716 Pls
2478 3266 Pls
3640 1792 Pls
2671 1351 Pls
2404 1748 Pls
2665 1628 Pls
1055 4380 Pls
2995 1983 Pls
2454 4341 Pls
2759 4288 Pls
2172 3815 Pls
3406 3712 Pls
2897 2333 Pls
3538 694 Pls
2743 4294 Pls
4102 3496 Pls
2751 1665 Pls
4022 3644 Pls
3369 2340 Pls
2580 4392 Pls
3849 1043 Pls
4945 3074 Pls
2435 3909 Pls
3001 2981 Pls
4898 3031 Pls
2928 4185 Pls
4610 3595 Pls
4224 3158 Pls
1680 2347 Pls
3625 2542 Pls
2964 1337 Pls
2346 3573 Pls
3924 3296 Pls
3442 2303 Pls
3622 4029 Pls
2888 3476 Pls
3176 1934 Pls
1564 724 Pls
2164 1237 Pls
4000 2638 Pls
2977 4176 Pls
4581 2813 Pls
3701 3715 Pls
1602 719 Pls
2791 3492 Pls
4834 2930 Pls
3223 2405 Pls
2420 1589 Pls
2869 3546 Pls
2520 4356 Pls
3121 4096 Pls
3729 2479 Pls
2638 1047 Pls
4644 2854 Pls
3616 2882 Pls
4646 3245 Pls
3184 2517 Pls
2724 3717 Pls
2953 3019 Pls
4413 932 Pls
2930 4227 Pls
3952 4013 Pls
4175 1904 Pls
2525 4309 Pls
3621 2469 Pls
3773 3175 Pls
2802 3474 Pls
3891 3684 Pls
4321 3459 Pls
3207 2393 Pls
3104 4081 Pls
2507 4345 Pls
4282 2771 Pls
5033 2927 Pls
3370 2310 Pls
3700 1817 Pls
4864 2907 Pls
2581 4396 Pls
2744 4250 Pls
2342 2662 Pls
3653 3805 Pls
4014 3451 Pls
3098 4022 Pls
2854 4106 Pls
1286 2653 Pls
2653 4270 Pls
750 1630 Pls
2657 3829 Pls
3834 2484 Pls
3313 4109 Pls
4180 2263 Pls
2999 2460 Pls
3832 2586 Pls
4950 2987 Pls
4091 1645 Pls
3834 3711 Pls
2836 1098 Pls
2208 2886 Pls
4905 2964 Pls
2863 3745 Pls
2196 1985 Pls
3786 3430 Pls
4952 2994 Pls
2099 2646 Pls
3013 1859 Pls
1693 3633 Pls
4504 2194 Pls
3232 2660 Pls
2739 3957 Pls
4340 3720 Pls
3340 3938 Pls
2978 1624 Pls
3332 1849 Pls
3660 3757 Pls
2125 3266 Pls
3948 2584 Pls
4538 2156 Pls
2993 4170 Pls
4114 3271 Pls
2516 4154 Pls
3213 3961 Pls
3757 2857 Pls
2240 2218 Pls
3377 2449 Pls
3562 3397 Pls
3143 1949 Pls
4950 3003 Pls
3139 2654 Pls
3479 3829 Pls
2595 4424 Pls
4449 3379 Pls
2494 4331 Pls
4249 3584 Pls
4952 2990 Pls
2766 4130 Pls
2898 2176 Pls
2038 3737 Pls
2539 3861 Pls
4500 1644 Pls
2351 3698 Pls
2727 3762 Pls
3906 4265 Pls
3993 2555 Pls
2550 4364 Pls
4025 3535 Pls
4996 2477 Pls
3222 2408 Pls
4156 3464 Pls
2824 3804 Pls
2762 3589 Pls
3921 2575 Pls
3389 3972 Pls
1486 582 Pls
2325 4034 Pls
4938 2951 Pls
3808 2977 Pls
2357 3517 Pls
2714 3978 Pls
3402 1263 Pls
2585 3668 Pls
4048 4371 Pls
4131 2224 Pls
2042 2250 Pls
2825 3493 Pls
2030 3651 Pls
3158 2252 Pls
4658 3239 Pls
3467 2381 Pls
3557 3683 Pls
2555 4245 Pls
2873 3626 Pls
3179 2508 Pls
3704 2293 Pls
4115 2641 Pls
4118 2515 Pls
3139 2646 Pls
3458 1966 Pls
2900 3302 Pls
2623 4271 Pls
2985 2797 Pls
4565 3112 Pls
2820 4303 Pls
4707 3214 Pls
2345 3496 Pls
4002 2609 Pls
993 1604 Pls
3378 4161 Pls
2657 2356 Pls
2690 4046 Pls
4368 2758 Pls
3224 2409 Pls
4698 3121 Pls
4870 3083 Pls
4419 2707 Pls
2491 4317 Pls
4939 2964 Pls
2518 4353 Pls
2806 3584 Pls
2869 2616 Pls
3421 3934 Pls
4989 2947 Pls
3109 2467 Pls
2621 3930 Pls
3882 1161 Pls
3581 4503 Pls
3326 2382 Pls
3095 2440 Pls
2128 2839 Pls
2727 3775 Pls
3025 4136 Pls
2659 4175 Pls
3448 3656 Pls
3236 2761 Pls
3824 3658 Pls
3330 3290 Pls
4258 3440 Pls
4954 3092 Pls
4008 4050 Pls
3418 2098 Pls
3116 2709 Pls
2827 4244 Pls
2250 3689 Pls
3640 2567 Pls
2757 2371 Pls
2680 3976 Pls
2632 3718 Pls
3924 2759 Pls
2767 3812 Pls
3394 4089 Pls
2204 2465 Pls
3884 3648 Pls
2786 3847 Pls
2510 4344 Pls
2588 2553 Pls
4277 3410 Pls
2666 4102 Pls
3571 2426 Pls
3147 2273 Pls
3454 3921 Pls
1677 2165 Pls
3297 2917 Pls
4250 4049 Pls
4302 2697 Pls
2747 2987 Pls
3576 2464 Pls
3334 1456 Pls
2631 3969 Pls
2331 1403 Pls
2730 3625 Pls
2546 4073 Pls
3091 3135 Pls
3188 2513 Pls
2933 4200 Pls
3100 2048 Pls
1572 1620 Pls
3604 3835 Pls
4951 2986 Pls
3217 2405 Pls
1598 606 Pls
2796 4195 Pls
4345 3173 Pls
5007 2934 Pls
3799 2747 Pls
4605 2879 Pls
3211 2396 Pls
4939 3052 Pls
2521 4348 Pls
4035 3862 Pls
2579 4397 Pls
3989 2582 Pls
3784 3017 Pls
3271 3981 Pls
2248 3832 Pls
4985 2951 Pls
2882 4246 Pls
2962 3930 Pls
3548 1233 Pls
3719 3729 Pls
4193 3855 Pls
3656 2118 Pls
3365 2341 Pls
3567 2386 Pls
3957 3418 Pls
3823 2534 Pls
2754 3232 Pls
1922 3675 Pls
3223 2404 Pls
3932 2514 Pls
3147 2317 Pls
4363 3446 Pls
3768 3743 Pls
3346 2529 Pls
3190 2283 Pls
3410 4007 Pls
2224 1251 Pls
4604 1816 Pls
2542 4268 Pls
2514 4259 Pls
2646 2939 Pls
1758 2162 Pls
2596 4453 Pls
3550 1201 Pls
3800 2145 Pls
2385 3789 Pls
2702 3721 Pls
4948 3081 Pls
3945 3617 Pls
4959 2975 Pls
2746 4343 Pls
3925 3643 Pls
2896 3543 Pls
3072 2283 Pls
2408 4365 Pls
3226 2409 Pls
2459 4344 Pls
1992 1374 Pls
4953 3089 Pls
4350 2737 Pls
2015 1422 Pls
3107 1749 Pls
2547 4269 Pls
2474 3810 Pls
2428 2483 Pls
3625 2473 Pls
4777 3110 Pls
3362 1501 Pls
3240 4003 Pls
3179 2382 Pls
4230 2710 Pls
3155 2337 Pls
2553 4279 Pls
2554 2715 Pls
2632 4207 Pls
4640 3176 Pls
2697 4227 Pls
2459 4343 Pls
2624 4057 Pls
4575 2766 Pls
3801 3686 Pls
3960 3575 Pls
5032 2927 Pls
2581 4395 Pls
2863 3200 Pls
2093 2418 Pls
2865 3511 Pls
4661 3181 Pls
1447 2576 Pls
2994 3971 Pls
3269 2412 Pls
3453 2238 Pls
4938 4223 Pls
2710 3721 Pls
2692 3479 Pls
2418 3900 Pls
3825 2122 Pls
4194 3558 Pls
3142 2293 Pls
3784 2200 Pls
3222 1905 Pls
2641 2629 Pls
2879 3348 Pls
2545 4168 Pls
3780 2782 Pls
2886 4154 Pls
3626 4465 Pls
4905 2936 Pls
4720 2842 Pls
2906 3301 Pls
4372 2798 Pls
2596 4434 Pls
2662 3029 Pls
2824 3652 Pls
4579 3343 Pls
2585 4163 Pls
3219 2402 Pls
1562 1243 Pls
4961 2948 Pls
3863 4006 Pls
4339 3337 Pls
4012 3991 Pls
3912 2567 Pls
3488 3476 Pls
3570 3858 Pls
2938 2930 Pls
2192 1025 Pls
4901 3005 Pls
4849 1868 Pls
3042 2898 Pls
3837 2781 Pls
4251 2482 Pls
2933 3335 Pls
4822 3157 Pls
3231 3985 Pls
2860 3375 Pls
3595 4417 Pls
4712 3116 Pls
2407 4015 Pls
2537 3878 Pls
3324 2445 Pls
4301 3370 Pls
3651 474 Pls
4469 3340 Pls
3364 3942 Pls
2376 4321 Pls
3197 4075 Pls
2425 2738 Pls
2590 4433 Pls
2700 3112 Pls
3249 3685 Pls
4890 2098 Pls
1519 1839 Pls
1402 2457 Pls
4953 3001 Pls
3649 2551 Pls
2707 3713 Pls
2501 3709 Pls
4949 2992 Pls
1798 1411 Pls
4344 2754 Pls
3353 4342 Pls
3451 3878 Pls
2979 3875 Pls
2733 2532 Pls
4698 3141 Pls
3218 2631 Pls
2984 2096 Pls
3137 2949 Pls
3222 2405 Pls
2890 3286 Pls
919 2999 Pls
3589 2527 Pls
4343 2747 Pls
2628 3808 Pls
3507 2569 Pls
4674 1821 Pls
3214 2429 Pls
3106 3332 Pls
2035 2804 Pls
4944 2984 Pls
2431 3054 Pls
2478 2195 Pls
3137 4349 Pls
4058 3251 Pls
3544 1330 Pls
2539 4354 Pls
2700 3436 Pls
3693 3098 Pls
4705 1424 Pls
2740 2548 Pls
2638 4358 Pls
1791 3682 Pls
4484 2837 Pls
2540 4358 Pls
2344 4452 Pls
2981 4164 Pls
2281 1602 Pls
3974 3630 Pls
4835 3057 Pls
2551 3023 Pls
2468 4339 Pls
3337 3539 Pls
2614 4374 Pls
3996 881 Pls
2675 3902 Pls
2739 2540 Pls
971 701 Pls
4694 3232 Pls
2578 3500 Pls
2995 4348 Pls
3363 2350 Pls
3632 3804 Pls
1416 1589 Pls
2988 2583 Pls
3853 2484 Pls
3790 2533 Pls
3912 2015 Pls
3773 3793 Pls
1690 2646 Pls
3225 2405 Pls
2321 4090 Pls
2577 2136 Pls
4742 3210 Pls
2579 4395 Pls
3861 1066 Pls
3083 2477 Pls
3114 2682 Pls
2636 4260 Pls
3100 2270 Pls
2409 4363 Pls
3236 4001 Pls
3190 2482 Pls
3921 3594 Pls
4198 2685 Pls
3733 2492 Pls
4208 3049 Pls
2376 3286 Pls
4942 3008 Pls
3351 2357 Pls
2655 3883 Pls
1735 2873 Pls
4726 2869 Pls
2409 4362 Pls
2608 4347 Pls
3220 2406 Pls
3366 2349 Pls
1147 2860 Pls
3219 2401 Pls
3135 2619 Pls
2740 3657 Pls
1833 4060 Pls
3878 2542 Pls
3346 3352 Pls
2924 1910 Pls
2933 4181 Pls
2680 3828 Pls
4921 2959 Pls
2158 956 Pls
4962 2975 Pls
4397 1784 Pls
4530 2847 Pls
4958 3087 Pls
2711 3668 Pls
1320 1612 Pls
3409 3309 Pls
1876 2521 Pls
2542 4303 Pls
4219 3421 Pls
4218 3681 Pls
2848 3446 Pls
3018 2892 Pls
3328 2620 Pls
2439 1586 Pls
4306 2669 Pls
2614 4199 Pls
2661 3723 Pls
3631 3497 Pls
4859 3217 Pls
2837 3857 Pls
1653 3768 Pls
3434 3642 Pls
1847 2201 Pls
3056 2463 Pls
4752 3072 Pls
3814 1886 Pls
3928 1247 Pls
2603 4378 Pls
1394 3827 Pls
2434 4125 Pls
2816 3382 Pls
2862 3392 Pls
2491 4342 Pls
3185 3987 Pls
3708 1797 Pls
4669 3183 Pls
2328 1375 Pls
2505 1710 Pls
4988 3127 Pls
3020 4059 Pls
2829 3421 Pls
4724 3192 Pls
5017 2934 Pls
4414 2778 Pls
4180 3204 Pls
4457 3078 Pls
1480 4275 Pls
2490 2128 Pls
1477 3252 Pls
4313 2763 Pls
4239 3962 Pls
3778 2597 Pls
2837 2693 Pls
4434 2708 Pls
3127 2943 Pls
2822 2034 Pls
2855 2297 Pls
4441 3109 Pls
2704 3977 Pls
2706 3991 Pls
2961 4090 Pls
3329 2210 Pls
4832 3050 Pls
1690 2760 Pls
2581 4392 Pls
4620 3262 Pls
4961 2975 Pls
2132 2711 Pls
4272 3442 Pls
3822 3140 Pls
3227 2406 Pls
2545 4261 Pls
2557 4275 Pls
3711 3172 Pls
4488 2884 Pls
2308 1732 Pls
2580 4394 Pls
2373 2991 Pls
4728 3130 Pls
4618 2830 Pls
3961 2593 Pls
2663 4271 Pls
2800 3449 Pls
3791 2520 Pls
3590 3090 Pls
2727 3271 Pls
3229 2693 Pls
2791 3541 Pls
2533 4350 Pls
4000 3585 Pls
4546 2807 Pls
3031 2877 Pls
3176 2532 Pls
3365 2339 Pls
2514 4350 Pls
4864 3134 Pls
991 1885 Pls
3150 2438 Pls
2561 4091 Pls
4075 2696 Pls
4941 3048 Pls
4421 3132 Pls
3047 2670 Pls
3158 2595 Pls
3722 3049 Pls
3344 3024 Pls
2586 4406 Pls
4715 2805 Pls
3887 3177 Pls
3201 2422 Pls
3420 2361 Pls
3946 1451 Pls
4142 3461 Pls
4955 2998 Pls
4944 2977 Pls
3370 2275 Pls
2930 2146 Pls
1650 699 Pls
3224 2407 Pls
3586 3803 Pls
2798 3891 Pls
3984 1497 Pls
2572 4392 Pls
3169 2238 Pls
1421 4203 Pls
1174 4246 Pls
3038 3125 Pls
2723 3886 Pls
4480 3350 Pls
2730 4153 Pls
4001 3570 Pls
3439 3888 Pls
4666 2773 Pls
3050 3008 Pls
3930 4144 Pls
3370 3372 Pls
2363 4453 Pls
2808 3539 Pls
4037 1171 Pls
3262 2978 Pls
2780 1538 Pls
2958 3141 Pls
2984 3024 Pls
2852 1846 Pls
3608 2437 Pls
2098 1272 Pls
3828 3683 Pls
3079 2639 Pls
2723 3599 Pls
3470 1646 Pls
3287 2535 Pls
2881 3147 Pls
4112 3514 Pls
4803 2739 Pls
2971 2567 Pls
4802 2612 Pls
2819 3363 Pls
4823 2946 Pls
3057 1887 Pls
2687 4338 Pls
3366 2350 Pls
1442 3635 Pls
2962 4295 Pls
2279 2476 Pls
3169 4044 Pls
3262 2574 Pls
2518 4349 Pls
4067 3140 Pls
3344 3971 Pls
4584 4205 Pls
3406 2456 Pls
2468 1835 Pls
3390 3896 Pls
4288 2348 Pls
4957 2995 Pls
3666 3752 Pls
4785 3067 Pls
4042 3061 Pls
2905 3209 Pls
4255 3392 Pls
2928 1078 Pls
4320 1658 Pls
3950 2655 Pls
3127 2627 Pls
3620 3770 Pls
1477 3685 Pls
4949 2996 Pls
2945 2683 Pls
4950 2994 Pls
4201 2487 Pls
4935 3103 Pls
3657 3759 Pls
2990 2132 Pls
2526 3649 Pls
1315 1044 Pls
1642 3287 Pls
4055 2674 Pls
3175 2373 Pls
4996 2942 Pls
3208 2967 Pls
3175 2532 Pls
2592 1857 Pls
2310 1659 Pls
4211 3132 Pls
4744 3204 Pls
2595 3889 Pls
2803 2759 Pls
4918 2990 Pls
4476 2803 Pls
4017 1076 Pls
4808 3313 Pls
4847 2850 Pls
2402 4324 Pls
2095 3264 Pls
3379 4378 Pls
4941 3023 Pls
2643 4355 Pls
2788 1707 Pls
3292 3972 Pls
4182 3310 Pls
3159 2612 Pls
4947 3002 Pls
3588 1743 Pls
3658 2465 Pls
2817 2642 Pls
2439 3705 Pls
3398 1842 Pls
4955 3088 Pls
1267 2480 Pls
3541 2516 Pls
3805 2441 Pls
3932 3394 Pls
2065 2772 Pls
4886 2247 Pls
4657 3255 Pls
4536 2195 Pls
1445 3057 Pls
4896 2960 Pls
3369 2345 Pls
2530 4357 Pls
3953 2013 Pls
3562 2260 Pls
3892 3675 Pls
4897 3089 Pls
4946 2995 Pls
3154 2852 Pls
3500 2494 Pls
3635 3846 Pls
4156 3502 Pls
5003 3224 Pls
3184 2541 Pls
4375 2548 Pls
2501 4340 Pls
2986 3145 Pls
4197 2359 Pls
2745 4252 Pls
2514 4347 Pls
4747 2760 Pls
3130 2652 Pls
3548 3823 Pls
2309 3420 Pls
2541 4291 Pls
3205 2477 Pls
3116 2699 Pls
3346 2378 Pls
3493 2138 Pls
3657 2455 Pls
3967 3165 Pls
2459 4320 Pls
3951 3646 Pls
4420 2828 Pls
4173 1444 Pls
3086 2115 Pls
4053 3095 Pls
2460 4251 Pls
3081 2795 Pls
1321 2511 Pls
3151 2269 Pls
3145 2328 Pls
1851 4223 Pls
4871 3045 Pls
2849 3192 Pls
3603 3812 Pls
3298 2343 Pls
2495 4342 Pls
3553 2620 Pls
783 878 Pls
4355 2698 Pls
4036 1668 Pls
1173 3147 Pls
3348 2364 Pls
3379 2128 Pls
2615 4283 Pls
4755 2913 Pls
2600 2855 Pls
1182 1829 Pls
2754 1923 Pls
4949 3000 Pls
3977 2781 Pls
4277 2768 Pls
2455 3875 Pls
4917 2114 Pls
4057 2653 Pls
4616 2283 Pls
3643 1973 Pls
2160 1688 Pls
4206 2403 Pls
4611 3262 Pls
4133 1310 Pls
2905 3212 Pls
3131 2657 Pls
3053 2624 Pls
4091 3027 Pls
1740 3922 Pls
3887 3700 Pls
2379 4152 Pls
3848 3646 Pls
3079 2798 Pls
4951 2015 Pls
2501 4199 Pls
3465 1892 Pls
4653 3255 Pls
3096 2988 Pls
3139 2836 Pls
2048 2872 Pls
3153 2706 Pls
2325 1288 Pls
3313 3574 Pls
3971 3584 Pls
2973 559 Pls
1968 3481 Pls
3940 3623 Pls
3592 2436 Pls
3223 2403 Pls
2738 2490 Pls
3248 3409 Pls
2588 3355 Pls
4199 1955 Pls
4345 1968 Pls
4434 2980 Pls
2880 1971 Pls
2339 3557 Pls
2743 3980 Pls
3746 4064 Pls
4948 2999 Pls
2617 3158 Pls
2682 4055 Pls
2660 4030 Pls
3582 3354 Pls
3624 3847 Pls
1925 3236 Pls
4792 2976 Pls
2619 4209 Pls
4954 3085 Pls
4388 3308 Pls
2705 2913 Pls
4497 2858 Pls
3314 2204 Pls
3327 3442 Pls
2995 2615 Pls
3258 3901 Pls
3083 3011 Pls
1940 4172 Pls
4182 1683 Pls
4954 3088 Pls
2287 2535 Pls
2551 3517 Pls
2963 3300 Pls
3365 2349 Pls
3062 1995 Pls
2827 3571 Pls
1716 1161 Pls
2524 4348 Pls
4947 2996 Pls
4888 2991 Pls
3625 2440 Pls
2825 3629 Pls
3418 3523 Pls
2444 4047 Pls
4944 3064 Pls
3274 3448 Pls
2529 4316 Pls
2958 4199 Pls
1608 1659 Pls
2746 3643 Pls
3388 2374 Pls
4918 2986 Pls
3552 2651 Pls
2682 3122 Pls
2736 3803 Pls
2518 4347 Pls
1589 1820 Pls
4089 3420 Pls
3665 3771 Pls
1682 2468 Pls
2623 2643 Pls
2186 2425 Pls
3525 2560 Pls
3262 2292 Pls
1937 2874 Pls
2540 2355 Pls
3310 2304 Pls
2522 4349 Pls
4729 2935 Pls
4314 3445 Pls
2813 4299 Pls
4750 3182 Pls
4415 4274 Pls
3307 4011 Pls
3689 1887 Pls
3467 3669 Pls
4371 2764 Pls
3169 2272 Pls
3012 4304 Pls
4366 3197 Pls
3636 3773 Pls
3096 2421 Pls
2974 2036 Pls
4851 2892 Pls
4809 2880 Pls
4146 2646 Pls
4828 3135 Pls
2562 2318 Pls
4022 2543 Pls
2413 1735 Pls
2575 3700 Pls
2501 3835 Pls
2506 2842 Pls
4736 2902 Pls
3278 4192 Pls
3031 2994 Pls
3000 3029 Pls
4726 2875 Pls
3353 2366 Pls
3696 2478 Pls
3355 2223 Pls
3673 2258 Pls
4358 2812 Pls
3677 2471 Pls
4865 3096 Pls
3151 2286 Pls
4221 3718 Pls
2624 2300 Pls
3628 2661 Pls
3207 2266 Pls
2469 3270 Pls
3743 2111 Pls
2533 4361 Pls
1739 2626 Pls
4248 2754 Pls
4887 3124 Pls
3553 3812 Pls
1797 2857 Pls
2861 2390 Pls
2553 4363 Pls
4949 2944 Pls
2683 3442 Pls
2994 3162 Pls
2483 4343 Pls
1615 1874 Pls
4716 3215 Pls
2660 4010 Pls
2857 4227 Pls
2650 4041 Pls
3352 2452 Pls
3548 2359 Pls
2672 3987 Pls
3556 2804 Pls
766 3046 Pls
3762 3751 Pls
3024 4028 Pls
3667 2550 Pls
3221 2402 Pls
3219 4044 Pls
1316 2746 Pls
1627 3713 Pls
2756 739 Pls
2837 2553 Pls
2885 4028 Pls
3378 2320 Pls
4930 2891 Pls
2506 2520 Pls
3368 2345 Pls
2385 3117 Pls
3028 4085 Pls
3542 3393 Pls
4409 2768 Pls
1810 3755 Pls
3072 4109 Pls
2880 3343 Pls
2568 4387 Pls
2707 3692 Pls
4888 3009 Pls
3887 2216 Pls
3869 3635 Pls
3889 2632 Pls
2268 3278 Pls
2352 4402 Pls
3271 1834 Pls
2987 2626 Pls
2522 1544 Pls
3019 3953 Pls
4830 2949 Pls
3104 4414 Pls
3725 3277 Pls
4090 3531 Pls
3341 2627 Pls
4599 3201 Pls
2133 3658 Pls
2723 2975 Pls
2457 4341 Pls
4577 2861 Pls
1314 2207 Pls
3622 1264 Pls
2463 3441 Pls
5042 2739 Pls
2259 2446 Pls
3388 3176 Pls
3226 2400 Pls
4049 1835 Pls
3365 2344 Pls
1504 2878 Pls
3265 3960 Pls
4881 2985 Pls
1123 1394 Pls
3365 2342 Pls
2535 4351 Pls
3308 2517 Pls
4489 3321 Pls
3886 2825 Pls
1724 1237 Pls
4206 2701 Pls
2556 4366 Pls
4481 3261 Pls
3361 2342 Pls
2518 4352 Pls
2182 2349 Pls
3918 3650 Pls
2964 1235 Pls
3641 2453 Pls
3065 4066 Pls
3066 2762 Pls
3025 1870 Pls
4017 2567 Pls
2852 3551 Pls
4958 3087 Pls
4513 1180 Pls
2744 3587 Pls
3191 2219 Pls
4476 3045 Pls
3008 3054 Pls
4107 2639 Pls
4725 3099 Pls
3246 2628 Pls
2341 3052 Pls
2689 4056 Pls
3367 2343 Pls
2739 2421 Pls
3812 3700 Pls
4532 3173 Pls
3099 3534 Pls
2609 3920 Pls
3158 2581 Pls
3150 2270 Pls
4433 2754 Pls
3479 3863 Pls
2583 4099 Pls
1476 1220 Pls
3348 2776 Pls
3318 2587 Pls
3368 2341 Pls
2805 4198 Pls
3826 2502 Pls
2524 4346 Pls
3365 2349 Pls
3752 2169 Pls
3409 2172 Pls
3337 2536 Pls
4475 2840 Pls
4119 2594 Pls
3428 2473 Pls
4656 1760 Pls
4539 3042 Pls
1849 3450 Pls
3173 2372 Pls
3419 3899 Pls
3401 3716 Pls
2569 4379 Pls
4271 3380 Pls
4533 3315 Pls
3580 2687 Pls
2890 3435 Pls
3046 1842 Pls
4556 2862 Pls
2374 4305 Pls
1041 4421 Pls
3573 1482 Pls
2756 3823 Pls
4244 2691 Pls
2581 4336 Pls
2269 1395 Pls
3359 2666 Pls
4916 1893 Pls
2441 3085 Pls
3099 3332 Pls
2551 4282 Pls
3367 2350 Pls
2986 3917 Pls
2726 3759 Pls
2599 4276 Pls
2674 4347 Pls
3489 2626 Pls
4335 3272 Pls
2929 3512 Pls
4957 2977 Pls
4848 3088 Pls
4952 2888 Pls
4329 3816 Pls
3195 4263 Pls
4708 2562 Pls
4947 3032 Pls
4903 3057 Pls
2601 3990 Pls
2931 2842 Pls
4418 3358 Pls
3775 2118 Pls
2773 4219 Pls
2651 4260 Pls
1356 937 Pls
2589 3109 Pls
3562 2423 Pls
3462 2372 Pls
2285 3710 Pls
3333 3944 Pls
3199 4053 Pls
4413 2839 Pls
2644 4345 Pls
3777 2271 Pls
2739 2655 Pls
3371 2341 Pls
1529 3410 Pls
1418 1304 Pls
3266 2587 Pls
2778 3621 Pls
2514 3487 Pls
4018 3610 Pls
2350 4237 Pls
3505 2641 Pls
3845 2758 Pls
2829 2222 Pls
2723 2167 Pls
4258 3446 Pls
3565 2062 Pls
4405 2958 Pls
2519 4342 Pls
2047 4367 Pls
2516 4346 Pls
2655 3913 Pls
2617 4286 Pls
2393 1358 Pls
2789 1837 Pls
2159 4348 Pls
3571 3240 Pls
2537 4362 Pls
2772 1567 Pls
3307 3960 Pls
3450 3866 Pls
4421 2775 Pls
4084 2469 Pls
3981 3578 Pls
4331 2179 Pls
2929 4183 Pls
3173 2578 Pls
1728 587 Pls
2180 2914 Pls
2872 3365 Pls
3260 2414 Pls
4791 2389 Pls
3991 2552 Pls
4063 2533 Pls
3082 3488 Pls
2772 3253 Pls
2955 3288 Pls
1937 3073 Pls
3551 2417 Pls
3082 2797 Pls
3365 2339 Pls
3223 2404 Pls
3217 2405 Pls
4485 2678 Pls
3003 2846 Pls
3471 704 Pls
% End plot #1
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
