%!PS-Adobe-2.0 EPSF-2.0
%%Title: avatarsdistribution.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Wed Feb  2 23:23:40 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avatarsdistribution.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (Eduardo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  2 23:23:40 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 320 50 lineto 320 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
624 320 M
63 0 V
4424 0 R
-63 0 V
stroke
528 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
624 886 M
63 0 V
4424 0 R
-63 0 V
stroke
528 886 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
624 1452 M
63 0 V
4424 0 R
-63 0 V
stroke
528 1452 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MRshow
1.000 UL
LTb
624 2018 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2018 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
624 2584 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2584 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
1.000 UL
LTb
624 3150 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3150 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
1.000 UL
LTb
624 3716 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3716 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
1.000 UL
LTb
624 4282 M
63 0 V
4424 0 R
-63 0 V
stroke
528 4282 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
624 320 M
0 63 V
0 4176 R
0 -63 V
stroke
624 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1223 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1223 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
1822 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1822 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MCshow
1.000 UL
LTb
2421 320 M
0 63 V
0 4176 R
0 -63 V
stroke
2421 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MCshow
1.000 UL
LTb
3020 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3020 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MCshow
1.000 UL
LTb
3619 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3619 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MCshow
1.000 UL
LTb
4218 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4218 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MCshow
1.000 UL
LTb
4817 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4817 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
2867 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (750 players, no hotspots)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
815 587 Pls
4550 2766 Pls
2077 3319 Pls
3574 1287 Pls
3741 3056 Pls
1846 2794 Pls
1855 631 Pls
1225 1567 Pls
1430 1856 Pls
3526 1406 Pls
4265 4058 Pls
2507 3988 Pls
2903 1754 Pls
2352 1122 Pls
3335 3710 Pls
3007 2045 Pls
2475 2259 Pls
1246 3440 Pls
1761 3214 Pls
3942 2190 Pls
1410 3048 Pls
1079 687 Pls
4126 1748 Pls
1657 2306 Pls
2679 1750 Pls
3523 754 Pls
4343 1532 Pls
3517 3819 Pls
4084 3864 Pls
4032 2735 Pls
924 1668 Pls
3097 704 Pls
4176 2164 Pls
2332 4261 Pls
1748 2932 Pls
4759 2676 Pls
763 2400 Pls
2081 4138 Pls
4611 788 Pls
1703 2547 Pls
2812 1042 Pls
2886 2869 Pls
3284 1274 Pls
4845 4191 Pls
1022 777 Pls
4773 736 Pls
2430 3669 Pls
2257 3733 Pls
4207 3823 Pls
1922 742 Pls
4932 4251 Pls
2898 1009 Pls
4400 1487 Pls
933 1490 Pls
3532 3546 Pls
1457 1559 Pls
2236 838 Pls
4718 1488 Pls
4645 3755 Pls
3055 3364 Pls
871 1813 Pls
1768 4366 Pls
1114 946 Pls
1700 2766 Pls
2082 4094 Pls
1220 1382 Pls
4172 3750 Pls
2293 3110 Pls
4017 2778 Pls
1149 615 Pls
3330 2793 Pls
1777 1189 Pls
3526 2182 Pls
1364 3552 Pls
3972 1668 Pls
2042 2592 Pls
2637 3698 Pls
4315 3269 Pls
1548 2905 Pls
910 3870 Pls
4154 484 Pls
2535 3089 Pls
3660 680 Pls
2924 3542 Pls
2668 2824 Pls
2108 3048 Pls
1208 4292 Pls
3053 1165 Pls
2729 987 Pls
1040 3290 Pls
3165 2134 Pls
4503 2167 Pls
2428 575 Pls
1488 1847 Pls
2655 490 Pls
4068 3163 Pls
2057 2506 Pls
685 2042 Pls
4638 2597 Pls
2823 2732 Pls
3085 1444 Pls
4100 980 Pls
4061 3414 Pls
4456 3358 Pls
2671 2024 Pls
4395 2555 Pls
3206 1561 Pls
1833 3400 Pls
3133 3096 Pls
898 1535 Pls
4486 1088 Pls
2798 1487 Pls
2687 4284 Pls
4130 4034 Pls
2480 1186 Pls
1083 678 Pls
881 744 Pls
3922 3070 Pls
3255 1521 Pls
2366 1871 Pls
2777 3580 Pls
4611 3890 Pls
3114 2613 Pls
4785 2730 Pls
4266 3269 Pls
1411 2016 Pls
1567 1125 Pls
4904 3547 Pls
4542 2159 Pls
3503 2996 Pls
3695 3980 Pls
1177 3826 Pls
4114 1378 Pls
2647 2980 Pls
3239 1942 Pls
1949 1754 Pls
4225 3620 Pls
1702 3591 Pls
3353 4093 Pls
4831 2104 Pls
2894 3492 Pls
2070 2271 Pls
3525 2699 Pls
2688 1375 Pls
3802 1902 Pls
2052 1500 Pls
1016 4187 Pls
3919 4369 Pls
4810 3714 Pls
4776 389 Pls
2804 1566 Pls
1850 1688 Pls
1542 1516 Pls
3166 3433 Pls
922 1794 Pls
1855 1269 Pls
1321 4159 Pls
2135 3826 Pls
1242 3224 Pls
3852 2182 Pls
4797 616 Pls
939 1261 Pls
4530 999 Pls
2706 1941 Pls
3183 3097 Pls
4859 2996 Pls
2869 3165 Pls
684 4032 Pls
2220 4287 Pls
4210 1792 Pls
1344 2740 Pls
4895 3674 Pls
1900 3631 Pls
1642 690 Pls
1046 3649 Pls
836 4211 Pls
1415 541 Pls
3769 461 Pls
3941 2915 Pls
1142 1150 Pls
2108 1876 Pls
4740 2115 Pls
2703 2807 Pls
3096 605 Pls
2757 4420 Pls
4499 1111 Pls
1242 1507 Pls
3125 1165 Pls
1948 699 Pls
4352 2503 Pls
3114 1308 Pls
3474 2554 Pls
4776 1147 Pls
3122 816 Pls
4176 1334 Pls
3692 2661 Pls
1636 3765 Pls
1125 2290 Pls
4301 3162 Pls
3819 3134 Pls
706 4236 Pls
2136 2909 Pls
1163 962 Pls
2692 3168 Pls
1126 848 Pls
4965 3006 Pls
4287 642 Pls
3826 4199 Pls
1501 1281 Pls
4906 1062 Pls
4098 3035 Pls
4523 1660 Pls
3483 2711 Pls
2808 1793 Pls
3557 2153 Pls
971 3282 Pls
2813 4170 Pls
1363 1547 Pls
4525 475 Pls
2687 788 Pls
3648 4231 Pls
4619 3321 Pls
881 761 Pls
3977 3685 Pls
2183 1737 Pls
1719 2354 Pls
1584 1236 Pls
3440 3029 Pls
2791 2070 Pls
4454 2140 Pls
4595 2494 Pls
4086 3025 Pls
3958 2965 Pls
3263 2957 Pls
3662 1454 Pls
3062 4157 Pls
4324 2024 Pls
2784 2003 Pls
1052 2780 Pls
4663 3340 Pls
1372 1072 Pls
3837 943 Pls
1330 2570 Pls
4109 1853 Pls
1884 1308 Pls
3467 2850 Pls
3235 2161 Pls
2299 2566 Pls
1354 1139 Pls
3849 3994 Pls
2744 4183 Pls
1895 1633 Pls
3431 4079 Pls
4610 1888 Pls
3578 1903 Pls
3577 4313 Pls
2160 2215 Pls
4822 2966 Pls
4606 1021 Pls
3242 1233 Pls
2163 3628 Pls
1897 3940 Pls
1422 2346 Pls
4182 3079 Pls
3165 2347 Pls
4250 1898 Pls
2563 2853 Pls
926 2945 Pls
2650 2876 Pls
4862 4202 Pls
1003 3032 Pls
1046 2680 Pls
2230 3891 Pls
3842 1406 Pls
1886 1323 Pls
4269 1381 Pls
4872 1771 Pls
2451 644 Pls
4207 589 Pls
3297 3065 Pls
4478 1844 Pls
4526 3331 Pls
4300 2544 Pls
3493 634 Pls
832 2989 Pls
2653 2871 Pls
4165 534 Pls
2617 2683 Pls
864 1601 Pls
3491 2051 Pls
4749 913 Pls
2134 1830 Pls
3822 2986 Pls
3872 1393 Pls
3981 1720 Pls
1461 1454 Pls
2121 4332 Pls
3421 3236 Pls
2598 3357 Pls
3618 1642 Pls
2415 2688 Pls
957 2425 Pls
4568 2002 Pls
3446 2459 Pls
1819 1994 Pls
1157 3508 Pls
1342 4201 Pls
1889 3723 Pls
1095 3695 Pls
1727 2354 Pls
1892 3851 Pls
3545 2704 Pls
4517 2867 Pls
4142 2878 Pls
1789 1390 Pls
3808 3906 Pls
2619 3163 Pls
3286 1838 Pls
1942 3571 Pls
2371 3874 Pls
4431 1913 Pls
1535 4458 Pls
1226 2214 Pls
2732 3408 Pls
928 3172 Pls
4383 3195 Pls
2713 3113 Pls
2460 4283 Pls
3891 2494 Pls
3538 686 Pls
3989 2551 Pls
2724 3547 Pls
1057 2758 Pls
827 1221 Pls
3072 3675 Pls
4192 1591 Pls
2597 1537 Pls
3696 1647 Pls
3796 2094 Pls
2441 4012 Pls
3013 2402 Pls
1962 1819 Pls
4127 2235 Pls
3136 1851 Pls
4164 2703 Pls
972 797 Pls
1825 3661 Pls
4896 590 Pls
2910 3190 Pls
4212 746 Pls
4856 2172 Pls
1980 3532 Pls
1288 3736 Pls
2464 1451 Pls
2318 3163 Pls
1225 767 Pls
1592 750 Pls
2766 1181 Pls
1909 3097 Pls
4842 635 Pls
937 1412 Pls
4274 3423 Pls
4985 3238 Pls
3191 734 Pls
3331 2876 Pls
4864 4004 Pls
4608 1295 Pls
3997 2004 Pls
3297 1188 Pls
1625 3383 Pls
4360 2899 Pls
1197 2241 Pls
3979 2657 Pls
2622 1181 Pls
2464 3931 Pls
2045 1872 Pls
4094 935 Pls
3027 2703 Pls
1141 2924 Pls
3388 2928 Pls
4247 1028 Pls
2051 991 Pls
4319 1738 Pls
1098 3371 Pls
3695 1438 Pls
1330 1310 Pls
1647 1105 Pls
1029 797 Pls
4786 4356 Pls
4144 2462 Pls
3123 3754 Pls
4316 1006 Pls
1403 3657 Pls
3294 2711 Pls
998 906 Pls
2204 1557 Pls
4446 4038 Pls
3808 3653 Pls
3642 881 Pls
3160 1381 Pls
2301 934 Pls
2543 2550 Pls
2487 1401 Pls
1678 3104 Pls
2018 3715 Pls
867 1685 Pls
4223 3530 Pls
1001 1339 Pls
2381 1234 Pls
3843 1668 Pls
2550 2267 Pls
3524 3930 Pls
1004 1328 Pls
4390 1833 Pls
2590 1103 Pls
3252 3112 Pls
4009 1402 Pls
1848 1367 Pls
4258 3318 Pls
2971 4057 Pls
1981 2345 Pls
1702 2835 Pls
3742 3023 Pls
2377 1126 Pls
2679 2451 Pls
3574 1009 Pls
5010 3891 Pls
838 2206 Pls
1657 564 Pls
3322 1083 Pls
4894 3377 Pls
3887 2326 Pls
2104 547 Pls
1997 1426 Pls
3295 1028 Pls
977 3796 Pls
2261 4462 Pls
884 2871 Pls
4208 818 Pls
1363 1284 Pls
2460 1182 Pls
4591 2698 Pls
4061 2239 Pls
1098 2872 Pls
3054 2344 Pls
2965 1946 Pls
4350 941 Pls
3299 966 Pls
1956 3217 Pls
4731 4172 Pls
3374 606 Pls
2385 2489 Pls
4432 777 Pls
4195 4215 Pls
1212 1084 Pls
1561 4316 Pls
1261 2031 Pls
1845 3235 Pls
2170 2310 Pls
3524 2512 Pls
3866 922 Pls
943 2082 Pls
2148 3364 Pls
4727 2952 Pls
2566 2929 Pls
3549 1515 Pls
3613 1927 Pls
2941 3555 Pls
1761 1322 Pls
3096 2472 Pls
3413 2802 Pls
3928 2432 Pls
1577 725 Pls
893 1232 Pls
2331 3914 Pls
2002 2458 Pls
2490 870 Pls
1230 890 Pls
2286 951 Pls
4146 3058 Pls
2512 582 Pls
1384 2612 Pls
4710 991 Pls
3145 3860 Pls
1312 2305 Pls
4090 4012 Pls
3851 3385 Pls
3177 2968 Pls
1267 2538 Pls
3859 991 Pls
4361 1857 Pls
1357 4228 Pls
3121 724 Pls
3394 1757 Pls
1479 2324 Pls
4672 2026 Pls
2270 2833 Pls
2857 1225 Pls
3100 3874 Pls
1797 1937 Pls
3761 1665 Pls
1612 2779 Pls
3026 1944 Pls
1765 2452 Pls
2862 2840 Pls
1642 992 Pls
1455 3915 Pls
2994 447 Pls
3577 997 Pls
2517 3678 Pls
1735 2651 Pls
2600 1146 Pls
3035 4013 Pls
2062 3232 Pls
1974 4065 Pls
1864 4084 Pls
4644 1309 Pls
4039 850 Pls
4077 4301 Pls
2128 3100 Pls
3893 1498 Pls
1802 2609 Pls
2063 1308 Pls
3072 2873 Pls
1161 3506 Pls
3546 1226 Pls
4414 1370 Pls
2086 3107 Pls
3509 2358 Pls
1451 3816 Pls
2198 2368 Pls
4069 3809 Pls
785 756 Pls
1942 3035 Pls
4413 3414 Pls
2479 3771 Pls
4905 2319 Pls
4871 1721 Pls
3872 2338 Pls
4362 1524 Pls
2076 1648 Pls
2566 3950 Pls
3001 789 Pls
3051 4298 Pls
3279 2976 Pls
2481 1866 Pls
2978 2715 Pls
4390 1905 Pls
1508 2927 Pls
1736 3163 Pls
4793 2656 Pls
3542 4210 Pls
3089 851 Pls
2574 3116 Pls
2818 2443 Pls
3144 676 Pls
3074 2607 Pls
3825 3768 Pls
3025 3398 Pls
3014 2339 Pls
3485 1941 Pls
845 4036 Pls
3434 2617 Pls
4754 2786 Pls
1007 2142 Pls
2019 1078 Pls
3480 1421 Pls
3086 3981 Pls
2454 4219 Pls
2551 4310 Pls
4843 1371 Pls
1306 3354 Pls
3337 815 Pls
2406 3235 Pls
4537 2759 Pls
3656 2753 Pls
3180 1120 Pls
871 803 Pls
2005 1023 Pls
2350 3584 Pls
4635 969 Pls
4557 3920 Pls
4653 3702 Pls
4946 2887 Pls
2324 2443 Pls
4484 3099 Pls
3094 3741 Pls
1914 1666 Pls
4413 2261 Pls
2727 1050 Pls
3533 1892 Pls
2954 2873 Pls
3687 1675 Pls
3119 2524 Pls
3328 838 Pls
4673 2425 Pls
1277 642 Pls
3052 727 Pls
2274 579 Pls
1637 521 Pls
1291 662 Pls
4751 3585 Pls
2111 3373 Pls
3482 2805 Pls
4204 1099 Pls
4808 1849 Pls
4725 1554 Pls
2066 3117 Pls
1886 2546 Pls
2174 2840 Pls
3196 3235 Pls
4512 3213 Pls
3852 3992 Pls
1375 3629 Pls
3692 671 Pls
3640 2741 Pls
3852 2659 Pls
1109 4386 Pls
4423 3347 Pls
4983 1661 Pls
4198 2787 Pls
2610 1612 Pls
3180 3226 Pls
3647 790 Pls
4336 3197 Pls
2581 611 Pls
3292 1908 Pls
4468 3562 Pls
1749 982 Pls
1879 1957 Pls
940 1785 Pls
4458 3773 Pls
3195 2694 Pls
3399 4036 Pls
2992 3776 Pls
1876 3373 Pls
1339 3283 Pls
3633 1439 Pls
3445 851 Pls
3453 964 Pls
967 3667 Pls
1325 3379 Pls
4567 1797 Pls
3578 4151 Pls
4480 3380 Pls
3609 3324 Pls
3619 1811 Pls
2549 3533 Pls
1995 3892 Pls
2690 2217 Pls
2235 1277 Pls
1679 1312 Pls
4319 389 Pls
2896 1917 Pls
1373 1643 Pls
2785 4102 Pls
868 3728 Pls
3691 3234 Pls
3427 4246 Pls
3173 664 Pls
1014 1953 Pls
2117 4211 Pls
3968 535 Pls
1091 947 Pls
2299 4393 Pls
4043 3446 Pls
859 3778 Pls
1887 1330 Pls
3207 2208 Pls
3072 2934 Pls
1662 2484 Pls
2677 3074 Pls
3597 2639 Pls
3504 2068 Pls
3901 4147 Pls
2479 1054 Pls
1405 3626 Pls
4547 3969 Pls
3764 1252 Pls
1720 3745 Pls
1455 2381 Pls
2407 856 Pls
1402 3249 Pls
3275 2550 Pls
2791 4310 Pls
3138 3945 Pls
1657 1477 Pls
3235 910 Pls
4485 2145 Pls
2843 448 Pls
3931 2533 Pls
4302 3271 Pls
4464 855 Pls
2119 3666 Pls
2133 565 Pls
4217 1099 Pls
2982 1627 Pls
2003 3995 Pls
4744 1319 Pls
1148 817 Pls
4359 1088 Pls
2169 4295 Pls
2644 1502 Pls
4862 1885 Pls
934 568 Pls
4281 1947 Pls
1952 2536 Pls
2619 3569 Pls
831 2851 Pls
4311 2357 Pls
4808 3010 Pls
988 834 Pls
3741 2608 Pls
4820 3869 Pls
2958 1457 Pls
3884 3398 Pls
792 2419 Pls
3963 1203 Pls
2311 2114 Pls
1513 1107 Pls
4821 1338 Pls
2873 2055 Pls
2838 1382 Pls
2640 3020 Pls
2756 2716 Pls
4101 3962 Pls
1795 1587 Pls
4509 3426 Pls
4416 4202 Pls
3809 2289 Pls
3072 2723 Pls
2467 837 Pls
4113 4310 Pls
2310 1476 Pls
1241 2406 Pls
2281 792 Pls
3566 2374 Pls
4054 3240 Pls
4933 3072 Pls
1373 2720 Pls
4459 3192 Pls
4745 2506 Pls
4097 1695 Pls
4709 4261 Pls
5018 1404 Pls
2953 4142 Pls
3556 1444 Pls
2740 2170 Pls
4365 2254 Pls
1948 2630 Pls
% End plot #1
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
