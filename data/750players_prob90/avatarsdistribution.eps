%!PS-Adobe-2.0 EPSF-2.0
%%Title: avatarsdistribution.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Wed Feb  2 23:23:43 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avatarsdistribution.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (Eduardo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  2 23:23:43 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 320 50 lineto 320 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
624 320 M
63 0 V
4424 0 R
-63 0 V
stroke
528 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
624 886 M
63 0 V
4424 0 R
-63 0 V
stroke
528 886 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
624 1452 M
63 0 V
4424 0 R
-63 0 V
stroke
528 1452 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MRshow
1.000 UL
LTb
624 2018 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2018 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
624 2584 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2584 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
1.000 UL
LTb
624 3150 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3150 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
1.000 UL
LTb
624 3716 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3716 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
1.000 UL
LTb
624 4282 M
63 0 V
4424 0 R
-63 0 V
stroke
528 4282 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
624 320 M
0 63 V
0 4176 R
0 -63 V
stroke
624 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1223 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1223 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
1822 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1822 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MCshow
1.000 UL
LTb
2421 320 M
0 63 V
0 4176 R
0 -63 V
stroke
2421 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MCshow
1.000 UL
LTb
3020 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3020 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MCshow
1.000 UL
LTb
3619 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3619 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MCshow
1.000 UL
LTb
4218 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4218 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MCshow
1.000 UL
LTb
4817 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4817 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
2867 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (750 players, 3 hotspots, 90% chance of choosing one as waypoint)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
3314 3942 Pls
2531 4325 Pls
3267 2422 Pls
3907 2584 Pls
3484 3852 Pls
3436 3925 Pls
3226 2406 Pls
3008 1634 Pls
4456 3348 Pls
3745 2525 Pls
4117 3553 Pls
4394 2810 Pls
2929 4202 Pls
3035 4080 Pls
4239 2742 Pls
3616 3795 Pls
4781 2978 Pls
2519 4345 Pls
2639 4209 Pls
4454 2856 Pls
3374 2354 Pls
4647 3248 Pls
3897 2564 Pls
3312 4016 Pls
3091 4089 Pls
4018 2680 Pls
3297 3695 Pls
4013 2612 Pls
4035 2617 Pls
3716 2575 Pls
3701 2653 Pls
1299 1832 Pls
3137 2679 Pls
3221 2408 Pls
1410 4329 Pls
3047 4137 Pls
2657 4022 Pls
3054 2175 Pls
3145 2339 Pls
2582 4391 Pls
2643 4195 Pls
3628 3819 Pls
3665 3759 Pls
2589 4106 Pls
3135 2653 Pls
3366 2350 Pls
4411 2729 Pls
3188 2777 Pls
4075 2695 Pls
1813 1609 Pls
4924 2982 Pls
4400 3397 Pls
2526 4328 Pls
4136 3515 Pls
4057 3555 Pls
4950 2993 Pls
2841 4200 Pls
2979 3075 Pls
2884 3777 Pls
3359 2346 Pls
2980 4347 Pls
4806 3166 Pls
3180 1777 Pls
2649 4286 Pls
2805 3380 Pls
3906 3667 Pls
3367 3908 Pls
3130 4094 Pls
1729 2046 Pls
4252 3433 Pls
2830 4259 Pls
4265 3441 Pls
3226 2406 Pls
2904 4378 Pls
3003 4164 Pls
3164 4041 Pls
4907 2998 Pls
2792 3603 Pls
2691 3873 Pls
2575 4395 Pls
3729 3718 Pls
3506 3853 Pls
3708 2566 Pls
4205 2688 Pls
2843 3462 Pls
2751 3708 Pls
4955 3090 Pls
2856 3426 Pls
2051 2681 Pls
4484 3350 Pls
3138 4033 Pls
4236 2332 Pls
4141 2665 Pls
4027 3946 Pls
2484 4215 Pls
2622 4137 Pls
3222 2404 Pls
3350 3154 Pls
3370 2345 Pls
3764 2589 Pls
4955 2995 Pls
4538 3301 Pls
1179 3454 Pls
4224 3425 Pls
3038 2875 Pls
3751 2582 Pls
2518 4350 Pls
4690 2881 Pls
3237 2434 Pls
3996 1344 Pls
3006 3309 Pls
3286 4009 Pls
2943 3355 Pls
2806 3704 Pls
3861 3693 Pls
4878 3128 Pls
3007 4162 Pls
3186 4032 Pls
3221 2407 Pls
4949 2992 Pls
4555 2820 Pls
4950 2991 Pls
2648 4352 Pls
3795 624 Pls
2942 3356 Pls
3072 2823 Pls
1998 4059 Pls
4773 2939 Pls
3126 2913 Pls
3060 3469 Pls
3514 2500 Pls
2425 3656 Pls
3072 2777 Pls
4598 1231 Pls
2627 4255 Pls
2708 3911 Pls
2524 4350 Pls
4174 3480 Pls
2652 4044 Pls
4606 2858 Pls
4228 2772 Pls
1770 3423 Pls
3597 3556 Pls
3366 3893 Pls
2724 1935 Pls
3486 2406 Pls
4553 3298 Pls
3647 2482 Pls
3084 3042 Pls
2628 4045 Pls
3241 2649 Pls
4031 3618 Pls
2519 4346 Pls
4946 2999 Pls
3635 2502 Pls
4904 3070 Pls
2758 3679 Pls
3340 3906 Pls
2129 3413 Pls
3360 2347 Pls
3920 2574 Pls
2529 4336 Pls
4953 3000 Pls
4946 2998 Pls
2670 1517 Pls
4947 2992 Pls
2575 4395 Pls
3754 2955 Pls
2914 3263 Pls
3386 2344 Pls
3495 2402 Pls
4949 2994 Pls
2577 4399 Pls
4738 3209 Pls
2895 4208 Pls
3445 3880 Pls
2173 3346 Pls
2834 3456 Pls
3860 3641 Pls
3226 2407 Pls
2667 4341 Pls
3221 2406 Pls
3256 4075 Pls
4027 2927 Pls
4947 2995 Pls
4957 3001 Pls
3370 2346 Pls
2617 4030 Pls
3928 1667 Pls
4949 2999 Pls
4205 3503 Pls
4547 2897 Pls
4562 2835 Pls
3065 2900 Pls
3464 1133 Pls
3844 3649 Pls
2396 2264 Pls
3065 2798 Pls
5009 2941 Pls
2514 4346 Pls
2685 4331 Pls
4942 3003 Pls
4638 2892 Pls
1392 968 Pls
4337 3417 Pls
3309 2484 Pls
4948 2999 Pls
3222 2405 Pls
3492 2392 Pls
4590 3211 Pls
3622 2454 Pls
3369 2346 Pls
3666 3332 Pls
4044 3571 Pls
3145 2618 Pls
4682 3135 Pls
3215 4048 Pls
3755 3750 Pls
3386 3920 Pls
4407 2384 Pls
4135 2659 Pls
3365 2344 Pls
2696 1944 Pls
3141 2667 Pls
4358 3399 Pls
2691 4063 Pls
2942 3142 Pls
2912 3262 Pls
2610 4052 Pls
4952 3089 Pls
4946 2998 Pls
3614 3827 Pls
2580 4395 Pls
3522 3828 Pls
3816 3681 Pls
4878 3558 Pls
3283 3696 Pls
4724 3128 Pls
3068 3052 Pls
3586 2444 Pls
4771 3004 Pls
2222 1476 Pls
4574 2772 Pls
3856 2578 Pls
3678 2494 Pls
3365 2344 Pls
3813 2526 Pls
1682 4345 Pls
2577 4395 Pls
2779 3782 Pls
4954 3090 Pls
3651 2482 Pls
2724 4318 Pls
4146 3536 Pls
3960 2626 Pls
4066 3052 Pls
4457 2807 Pls
4158 3528 Pls
2671 4107 Pls
4953 2994 Pls
4206 3422 Pls
3009 2994 Pls
2724 3954 Pls
1766 4063 Pls
3367 2351 Pls
3366 2345 Pls
1544 948 Pls
2648 4352 Pls
2764 3214 Pls
2710 3819 Pls
3464 2396 Pls
2562 4364 Pls
3572 2977 Pls
4703 2898 Pls
3514 2500 Pls
2629 1191 Pls
3245 3967 Pls
3361 2343 Pls
3220 2412 Pls
3088 2828 Pls
2658 4149 Pls
2887 4211 Pls
2719 3954 Pls
4555 3227 Pls
4853 3116 Pls
4164 2671 Pls
3520 2565 Pls
4050 3556 Pls
4868 2959 Pls
3506 3835 Pls
3820 3674 Pls
3637 3748 Pls
2564 4376 Pls
4333 3356 Pls
3049 2883 Pls
3288 3077 Pls
2034 2688 Pls
2863 3521 Pls
4776 3178 Pls
3774 2539 Pls
3206 2594 Pls
4238 3485 Pls
2595 4174 Pls
3368 2345 Pls
2895 4012 Pls
3612 3830 Pls
3322 2692 Pls
4967 3254 Pls
3136 2681 Pls
4439 3600 Pls
3391 3915 Pls
1628 3134 Pls
3158 4019 Pls
4056 3432 Pls
3623 2368 Pls
3952 2654 Pls
3819 3660 Pls
3419 3900 Pls
3365 2350 Pls
2577 3934 Pls
3774 3690 Pls
4072 2679 Pls
4875 3132 Pls
3214 2442 Pls
2089 2269 Pls
4745 2853 Pls
4234 3462 Pls
3454 2380 Pls
4955 3089 Pls
4939 3030 Pls
4951 2993 Pls
4795 3015 Pls
4402 2810 Pls
4230 3490 Pls
3369 2343 Pls
3392 3913 Pls
4183 2665 Pls
3997 3589 Pls
1701 2732 Pls
2809 1779 Pls
2519 4347 Pls
3363 2349 Pls
2736 3906 Pls
3294 3972 Pls
2595 4431 Pls
4763 2916 Pls
3548 2419 Pls
3497 3892 Pls
3741 2499 Pls
3174 4042 Pls
2669 4348 Pls
2489 4341 Pls
3898 2636 Pls
3204 4051 Pls
3972 3632 Pls
2971 3213 Pls
4383 2765 Pls
3208 2033 Pls
3251 3997 Pls
3840 3649 Pls
2563 4223 Pls
2621 4249 Pls
2412 3558 Pls
4356 3419 Pls
2527 3678 Pls
4872 3137 Pls
2862 4224 Pls
2294 3858 Pls
3086 2787 Pls
4074 3512 Pls
3425 2476 Pls
2445 3941 Pls
4607 2852 Pls
3911 3359 Pls
3256 4025 Pls
2582 4395 Pls
2892 4153 Pls
3393 2459 Pls
2765 4281 Pls
3454 1553 Pls
3711 3754 Pls
3946 3647 Pls
3224 3987 Pls
3199 2737 Pls
2792 3734 Pls
1916 1593 Pls
4102 2646 Pls
4959 2994 Pls
4184 2679 Pls
4411 3373 Pls
3367 2351 Pls
2569 4188 Pls
3222 2406 Pls
3120 2192 Pls
4086 2639 Pls
3643 3812 Pls
2864 1109 Pls
4917 3071 Pls
3080 2511 Pls
2197 2165 Pls
4176 2988 Pls
4438 2783 Pls
4123 3547 Pls
4131 3536 Pls
4728 3121 Pls
4446 2787 Pls
4613 3190 Pls
3446 3921 Pls
2709 3994 Pls
2580 4393 Pls
4435 2782 Pls
2612 4301 Pls
2792 3556 Pls
4082 2604 Pls
2745 3720 Pls
2537 4066 Pls
3515 2406 Pls
2671 4341 Pls
2676 3987 Pls
4683 3153 Pls
2550 1954 Pls
3230 3665 Pls
3031 2928 Pls
2815 1661 Pls
2682 4332 Pls
4338 2799 Pls
4433 3303 Pls
3369 2342 Pls
3647 2553 Pls
2745 3712 Pls
2900 4220 Pls
2769 1505 Pls
4909 2983 Pls
3038 3413 Pls
3171 2548 Pls
4959 3088 Pls
3545 2359 Pls
3300 2507 Pls
2947 3334 Pls
3123 3296 Pls
2774 4185 Pls
2848 3445 Pls
3206 2452 Pls
3377 3926 Pls
3347 2372 Pls
2747 4301 Pls
4957 3090 Pls
4638 2893 Pls
2983 3064 Pls
4075 2679 Pls
2458 4342 Pls
2756 4300 Pls
3321 1470 Pls
4809 2935 Pls
4523 2340 Pls
3174 2802 Pls
2891 3437 Pls
1454 1141 Pls
3912 3664 Pls
3779 4050 Pls
3269 2180 Pls
4949 2999 Pls
3218 2405 Pls
4959 3087 Pls
4614 3192 Pls
3907 3321 Pls
3460 3891 Pls
3692 3729 Pls
2641 4193 Pls
4955 3089 Pls
2581 4392 Pls
3697 3782 Pls
2686 4339 Pls
3027 4089 Pls
2995 3117 Pls
2685 3967 Pls
4274 3465 Pls
4961 3091 Pls
4137 3539 Pls
2516 4349 Pls
3215 2440 Pls
4016 2676 Pls
3081 2792 Pls
4434 3366 Pls
3071 4099 Pls
1519 2434 Pls
2870 4234 Pls
2990 3052 Pls
3078 3034 Pls
3624 3777 Pls
3224 2397 Pls
4832 2550 Pls
2868 1409 Pls
2452 1502 Pls
3477 2397 Pls
3034 4144 Pls
3160 2545 Pls
3103 4109 Pls
4770 2918 Pls
3737 2498 Pls
4400 3396 Pls
3381 3956 Pls
2579 4393 Pls
3377 3958 Pls
2717 3859 Pls
2699 4327 Pls
4839 3087 Pls
3223 2404 Pls
4952 3090 Pls
4315 3444 Pls
4456 2795 Pls
2858 3317 Pls
4446 3362 Pls
2315 2077 Pls
4861 3138 Pls
2577 4396 Pls
4955 3089 Pls
4634 3256 Pls
3825 3270 Pls
4873 3136 Pls
4711 3059 Pls
3952 2262 Pls
4717 2880 Pls
3361 3915 Pls
4710 2888 Pls
4154 3056 Pls
2411 3302 Pls
3857 1855 Pls
3640 3766 Pls
3082 2241 Pls
4677 3245 Pls
4093 3534 Pls
3826 3693 Pls
3183 2539 Pls
2614 1577 Pls
4779 3181 Pls
3491 2396 Pls
3083 2847 Pls
3920 2605 Pls
4958 3087 Pls
4546 3229 Pls
4820 2946 Pls
2470 4339 Pls
2637 4126 Pls
3128 2667 Pls
4487 2839 Pls
4953 3090 Pls
3181 2518 Pls
4771 3190 Pls
3057 2857 Pls
3001 4100 Pls
2753 4290 Pls
3071 4098 Pls
2692 448 Pls
4566 2837 Pls
4365 3413 Pls
4133 2658 Pls
4466 3343 Pls
4635 3181 Pls
4215 3473 Pls
2720 3882 Pls
3225 2407 Pls
4184 3479 Pls
2029 2092 Pls
2920 892 Pls
3911 3115 Pls
3354 3937 Pls
4279 3463 Pls
3227 2402 Pls
2239 2219 Pls
3466 3908 Pls
4559 3028 Pls
4910 3064 Pls
4157 2727 Pls
2615 4296 Pls
4838 2961 Pls
4793 2935 Pls
3219 2403 Pls
3992 3611 Pls
2888 4158 Pls
2338 4396 Pls
4118 2699 Pls
2662 1498 Pls
2622 4122 Pls
2671 4122 Pls
2801 4263 Pls
2993 2984 Pls
2578 4394 Pls
3222 2406 Pls
4691 3238 Pls
4631 2865 Pls
3123 4073 Pls
4755 2931 Pls
4270 2703 Pls
4987 3102 Pls
2577 4398 Pls
3124 2686 Pls
3876 3218 Pls
3474 3876 Pls
2620 1932 Pls
3010 4158 Pls
3453 3916 Pls
2734 3750 Pls
2572 4203 Pls
2592 4422 Pls
5036 1294 Pls
3226 2405 Pls
4008 3610 Pls
2983 4155 Pls
2837 3602 Pls
2580 4392 Pls
2522 4354 Pls
2702 4120 Pls
3210 2397 Pls
3207 2447 Pls
3114 2749 Pls
3477 1975 Pls
4785 3179 Pls
4600 2326 Pls
4261 3431 Pls
4669 3247 Pls
4372 2788 Pls
3133 2661 Pls
3222 2403 Pls
4551 2829 Pls
3340 3944 Pls
3226 2406 Pls
3538 3828 Pls
3829 3654 Pls
4036 3570 Pls
2532 4329 Pls
3443 3233 Pls
3162 2313 Pls
3896 2224 Pls
3182 2386 Pls
3369 2346 Pls
2463 4150 Pls
4710 1548 Pls
2579 4393 Pls
4320 2791 Pls
4099 2644 Pls
3486 3848 Pls
3285 2302 Pls
2756 4300 Pls
4948 2992 Pls
3544 2433 Pls
3289 2430 Pls
4844 2935 Pls
3570 2061 Pls
2431 4353 Pls
2804 3708 Pls
2789 4247 Pls
3133 2653 Pls
2581 4319 Pls
4670 2899 Pls
3370 2345 Pls
3072 3049 Pls
2515 4349 Pls
3020 3041 Pls
2989 4155 Pls
4579 2871 Pls
4530 2823 Pls
4954 3091 Pls
4433 3300 Pls
1596 4011 Pls
4589 2913 Pls
2520 4349 Pls
3638 3814 Pls
2645 3776 Pls
2874 3374 Pls
2821 4250 Pls
4724 3209 Pls
2896 4207 Pls
3738 2708 Pls
4099 2642 Pls
3385 2359 Pls
2957 4211 Pls
4229 3421 Pls
3205 2737 Pls
3209 4050 Pls
4821 3013 Pls
3806 3722 Pls
3977 3569 Pls
3065 2712 Pls
3091 3546 Pls
4687 2884 Pls
1209 2149 Pls
3992 3210 Pls
2796 2087 Pls
4403 2808 Pls
2824 3548 Pls
2864 3519 Pls
4293 3454 Pls
3354 2540 Pls
3191 2493 Pls
4472 2802 Pls
4776 2923 Pls
2548 4361 Pls
2375 1575 Pls
2614 4302 Pls
2939 4199 Pls
3197 2474 Pls
3319 3989 Pls
2302 2664 Pls
4812 3159 Pls
4952 2818 Pls
2573 4397 Pls
2519 4348 Pls
4248 3482 Pls
2644 4002 Pls
4311 3422 Pls
2675 3915 Pls
3056 2031 Pls
3647 2829 Pls
4365 3406 Pls
3072 2880 Pls
4184 2679 Pls
4611 2860 Pls
4116 3519 Pls
3223 2408 Pls
3386 2358 Pls
3835 3707 Pls
4160 2673 Pls
4947 2992 Pls
2700 3931 Pls
3195 2395 Pls
2814 4255 Pls
3823 3675 Pls
3521 1589 Pls
1930 3658 Pls
2567 3953 Pls
1073 1308 Pls
3101 2790 Pls
4709 3227 Pls
2864 4224 Pls
2983 3065 Pls
3909 2603 Pls
2782 3733 Pls
2895 4206 Pls
2565 3996 Pls
4317 2782 Pls
3038 3128 Pls
4105 2911 Pls
3058 2753 Pls
2796 4278 Pls
4016 3544 Pls
4237 3486 Pls
2437 2430 Pls
1901 3040 Pls
2526 1320 Pls
% End plot #1
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
