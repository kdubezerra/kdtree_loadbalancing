%!PS-Adobe-2.0 EPSF-2.0
%%Title: avatarsdistribution.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Wed Feb  2 23:23:42 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avatarsdistribution.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (Eduardo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  2 23:23:42 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 320 50 lineto 320 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
624 320 M
63 0 V
4424 0 R
-63 0 V
stroke
528 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
624 886 M
63 0 V
4424 0 R
-63 0 V
stroke
528 886 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
624 1452 M
63 0 V
4424 0 R
-63 0 V
stroke
528 1452 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MRshow
1.000 UL
LTb
624 2018 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2018 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
624 2584 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2584 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
1.000 UL
LTb
624 3150 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3150 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
1.000 UL
LTb
624 3716 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3716 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
1.000 UL
LTb
624 4282 M
63 0 V
4424 0 R
-63 0 V
stroke
528 4282 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
624 320 M
0 63 V
0 4176 R
0 -63 V
stroke
624 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1223 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1223 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
1822 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1822 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MCshow
1.000 UL
LTb
2421 320 M
0 63 V
0 4176 R
0 -63 V
stroke
2421 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MCshow
1.000 UL
LTb
3020 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3020 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MCshow
1.000 UL
LTb
3619 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3619 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MCshow
1.000 UL
LTb
4218 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4218 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MCshow
1.000 UL
LTb
4817 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4817 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
2867 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (750 players, 3 hotspots, 70% chance of choosing one as waypoint)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
3570 3815 Pls
4483 2843 Pls
3324 2258 Pls
3992 1524 Pls
3387 3304 Pls
2024 3408 Pls
4483 2823 Pls
3465 2487 Pls
4088 1341 Pls
3772 2529 Pls
826 2447 Pls
4810 3086 Pls
3083 3322 Pls
2764 3835 Pls
3884 2128 Pls
2457 2249 Pls
4552 3685 Pls
4752 1056 Pls
3843 2541 Pls
2465 4345 Pls
2450 2732 Pls
2837 2011 Pls
2944 3214 Pls
775 1408 Pls
2277 2092 Pls
4134 4167 Pls
1363 1961 Pls
1224 3081 Pls
4974 2967 Pls
4226 3360 Pls
2672 3829 Pls
4457 2829 Pls
3888 3632 Pls
3923 3250 Pls
2981 2347 Pls
3077 999 Pls
3219 2407 Pls
4298 2797 Pls
3672 3453 Pls
2824 3637 Pls
2739 3863 Pls
4907 2965 Pls
2756 4290 Pls
3439 3397 Pls
4170 2429 Pls
3797 2435 Pls
2375 2165 Pls
4176 2707 Pls
4485 3050 Pls
3650 2968 Pls
3704 3729 Pls
2598 3931 Pls
2856 1564 Pls
2413 4218 Pls
3774 2538 Pls
4097 3565 Pls
3329 2210 Pls
2178 1636 Pls
2940 3122 Pls
3497 3126 Pls
4103 2972 Pls
2469 3449 Pls
4243 2900 Pls
2634 3970 Pls
2563 4227 Pls
1775 2742 Pls
2729 3658 Pls
2433 4358 Pls
3082 2819 Pls
3208 2533 Pls
3273 2192 Pls
4387 2870 Pls
4041 3544 Pls
3912 2623 Pls
1712 3104 Pls
3710 3712 Pls
2843 3671 Pls
4940 3014 Pls
4324 3574 Pls
2223 2824 Pls
3436 3161 Pls
2924 2124 Pls
2381 4090 Pls
2693 3865 Pls
2937 3216 Pls
3376 2345 Pls
4973 2966 Pls
4943 3064 Pls
3150 2336 Pls
4523 2100 Pls
1180 4006 Pls
1364 2490 Pls
3337 2795 Pls
4983 3124 Pls
3788 2556 Pls
2906 2955 Pls
1597 1668 Pls
2206 1291 Pls
3028 2829 Pls
1250 3459 Pls
3008 2877 Pls
2888 3241 Pls
1763 4002 Pls
2355 4234 Pls
3859 2502 Pls
2769 4168 Pls
2351 3982 Pls
2632 4092 Pls
3213 2899 Pls
4865 2903 Pls
1959 1849 Pls
2081 3795 Pls
1965 2629 Pls
4957 2754 Pls
2567 4236 Pls
3019 4109 Pls
3045 2436 Pls
2920 3342 Pls
4122 3141 Pls
2893 1851 Pls
3764 3230 Pls
4796 2290 Pls
2584 4395 Pls
2127 1847 Pls
4093 1473 Pls
4368 2412 Pls
2568 4386 Pls
1562 3687 Pls
4011 3570 Pls
815 3076 Pls
3549 2519 Pls
4661 2877 Pls
2877 3168 Pls
3714 3338 Pls
3295 865 Pls
3264 2659 Pls
4446 2699 Pls
4370 2732 Pls
2529 4047 Pls
1712 1769 Pls
3159 2032 Pls
2301 3735 Pls
4784 2992 Pls
2678 3981 Pls
3876 2576 Pls
3145 2297 Pls
2464 1242 Pls
1904 2387 Pls
3103 2765 Pls
3251 1413 Pls
3510 4185 Pls
3158 2343 Pls
2843 3772 Pls
2977 2297 Pls
3576 3621 Pls
2880 2875 Pls
2463 3385 Pls
4029 2127 Pls
3153 2327 Pls
2805 3387 Pls
2353 2064 Pls
4623 2881 Pls
2580 4059 Pls
3311 2202 Pls
3561 3718 Pls
1451 2476 Pls
3378 2317 Pls
4899 2977 Pls
3312 2037 Pls
1825 3461 Pls
2367 4110 Pls
3598 3092 Pls
4957 2983 Pls
3812 2527 Pls
4968 4104 Pls
4695 3777 Pls
2198 888 Pls
2315 4338 Pls
4448 3173 Pls
2977 3180 Pls
4174 3473 Pls
4943 3064 Pls
3803 3333 Pls
2425 3573 Pls
3833 2723 Pls
1854 3462 Pls
1707 1517 Pls
2436 4356 Pls
3704 1435 Pls
2971 3273 Pls
4637 2838 Pls
3733 3389 Pls
3179 3226 Pls
4293 2420 Pls
3500 3214 Pls
4388 2808 Pls
1510 3738 Pls
2847 3258 Pls
4719 2918 Pls
2066 3301 Pls
4641 3157 Pls
4482 2701 Pls
1022 4193 Pls
4358 2413 Pls
4226 3261 Pls
3077 2738 Pls
4619 2839 Pls
3185 4132 Pls
4023 2235 Pls
2599 4452 Pls
2694 1477 Pls
3440 2278 Pls
2569 3204 Pls
2321 2130 Pls
4729 2732 Pls
2099 2220 Pls
2623 2831 Pls
3822 2746 Pls
3100 2868 Pls
2475 1883 Pls
3345 2377 Pls
3209 2522 Pls
4269 3475 Pls
3019 2878 Pls
2801 3492 Pls
3335 2388 Pls
4697 3144 Pls
2303 2454 Pls
3069 2557 Pls
2467 3954 Pls
2452 3565 Pls
3368 2257 Pls
4665 500 Pls
4522 2680 Pls
4345 2592 Pls
3639 2729 Pls
4548 3619 Pls
2842 3569 Pls
4288 1023 Pls
3555 2432 Pls
2838 1711 Pls
3598 1592 Pls
4031 3537 Pls
2103 1320 Pls
1999 2168 Pls
2720 2312 Pls
3377 2287 Pls
2656 3253 Pls
2892 2380 Pls
4104 3397 Pls
1569 3852 Pls
3401 3453 Pls
3353 2371 Pls
2995 3209 Pls
4291 3608 Pls
3126 2895 Pls
2136 3732 Pls
4858 2924 Pls
3149 2231 Pls
3601 3835 Pls
4004 2670 Pls
2359 2137 Pls
3042 4145 Pls
2852 3332 Pls
2735 3198 Pls
2540 3937 Pls
4424 3187 Pls
1915 576 Pls
4766 1998 Pls
5008 2937 Pls
1504 2863 Pls
3025 2895 Pls
2207 1771 Pls
3182 2181 Pls
2476 3149 Pls
2741 4298 Pls
2694 2379 Pls
4898 3162 Pls
3853 2581 Pls
3174 2523 Pls
3145 2330 Pls
4958 2990 Pls
3053 2580 Pls
1364 2449 Pls
3159 2354 Pls
3881 1357 Pls
2657 4296 Pls
2505 4239 Pls
4567 3000 Pls
2904 2921 Pls
5031 2163 Pls
1211 1041 Pls
3940 2545 Pls
2638 2672 Pls
1390 1266 Pls
2553 3255 Pls
2239 3210 Pls
3124 4177 Pls
2704 3682 Pls
2601 4152 Pls
4599 2784 Pls
3639 2802 Pls
4633 2834 Pls
4858 1053 Pls
3300 2543 Pls
4558 2811 Pls
4754 1145 Pls
3105 2159 Pls
3846 3585 Pls
2332 3596 Pls
3319 3917 Pls
2764 3554 Pls
4059 2626 Pls
3519 2732 Pls
4044 3692 Pls
2500 3773 Pls
3273 2376 Pls
3190 2496 Pls
3818 3421 Pls
3278 3369 Pls
4057 564 Pls
3643 3875 Pls
2696 3996 Pls
2493 4265 Pls
3149 2672 Pls
4954 2992 Pls
4387 1917 Pls
3343 3619 Pls
2512 2247 Pls
2674 3742 Pls
3902 2031 Pls
3916 1947 Pls
2928 3683 Pls
1728 2684 Pls
1564 4242 Pls
3303 2399 Pls
1644 796 Pls
3333 2340 Pls
4944 3004 Pls
2090 2121 Pls
4689 3817 Pls
3571 1201 Pls
4912 4211 Pls
3210 3797 Pls
4104 596 Pls
3594 1491 Pls
4431 2861 Pls
3453 1629 Pls
3391 1771 Pls
4845 2767 Pls
3153 1100 Pls
3172 3780 Pls
4819 3032 Pls
2949 3133 Pls
2580 4397 Pls
2713 4075 Pls
3182 2223 Pls
4486 3247 Pls
2018 3455 Pls
3234 3210 Pls
4860 2953 Pls
4202 2895 Pls
4069 3015 Pls
4986 3125 Pls
3001 4165 Pls
3214 3264 Pls
4109 3547 Pls
3451 3422 Pls
2936 4210 Pls
2607 3327 Pls
4274 3057 Pls
2931 3807 Pls
4581 3232 Pls
1929 3080 Pls
4952 2988 Pls
4849 3364 Pls
2152 3129 Pls
2669 3839 Pls
2805 975 Pls
2889 4128 Pls
3239 2451 Pls
2375 4405 Pls
3528 2332 Pls
2587 2537 Pls
3073 3667 Pls
4950 3076 Pls
3182 1599 Pls
4889 3138 Pls
4129 2576 Pls
3069 1882 Pls
4815 2844 Pls
2519 4346 Pls
2737 2510 Pls
3354 1313 Pls
4878 4179 Pls
2435 1532 Pls
1630 2787 Pls
4492 2874 Pls
3379 2305 Pls
4614 2856 Pls
4751 2935 Pls
2743 3644 Pls
1349 2610 Pls
3552 3033 Pls
2857 4232 Pls
3726 3516 Pls
2972 2013 Pls
2459 4341 Pls
3123 2923 Pls
4036 1264 Pls
4432 1656 Pls
2344 2854 Pls
2530 4355 Pls
2894 3203 Pls
4785 1020 Pls
3315 2849 Pls
3660 2960 Pls
4945 3001 Pls
3466 2950 Pls
2737 4355 Pls
4579 3337 Pls
2507 3031 Pls
3176 2227 Pls
873 2223 Pls
4954 3092 Pls
4941 3007 Pls
3451 4161 Pls
3953 2632 Pls
1611 2258 Pls
2447 4347 Pls
4974 2969 Pls
2774 4216 Pls
4949 2989 Pls
4398 3395 Pls
3260 1361 Pls
4944 3013 Pls
2083 2097 Pls
2453 4337 Pls
820 3487 Pls
3421 2225 Pls
2300 3440 Pls
4397 2770 Pls
4336 3133 Pls
4439 3971 Pls
4870 3030 Pls
3347 2368 Pls
4960 2977 Pls
3135 3533 Pls
2611 4080 Pls
3438 1072 Pls
4572 2809 Pls
2920 3224 Pls
4666 3002 Pls
2984 2858 Pls
3218 2400 Pls
3193 3815 Pls
2250 1860 Pls
2584 4130 Pls
3876 3484 Pls
3360 3693 Pls
3908 3309 Pls
4942 3022 Pls
2861 2933 Pls
3881 1906 Pls
2591 4448 Pls
3515 2445 Pls
3473 3855 Pls
2386 4277 Pls
3604 2612 Pls
2548 4251 Pls
4852 2940 Pls
3327 4110 Pls
4269 3395 Pls
3508 2837 Pls
3899 2701 Pls
2880 2302 Pls
3619 2533 Pls
4241 2118 Pls
2435 2393 Pls
2868 3182 Pls
3120 2345 Pls
2971 2990 Pls
4943 3061 Pls
3181 2505 Pls
2308 3694 Pls
3149 2635 Pls
4061 3614 Pls
1016 1188 Pls
3260 2799 Pls
4895 3938 Pls
2557 4124 Pls
2868 3392 Pls
1835 2051 Pls
2420 3983 Pls
1584 2142 Pls
2572 1978 Pls
2907 3258 Pls
1517 3670 Pls
3878 3034 Pls
3330 3305 Pls
4005 2407 Pls
2628 4241 Pls
2978 3257 Pls
2656 3848 Pls
2359 3870 Pls
2503 3964 Pls
3974 4295 Pls
2841 3277 Pls
4731 476 Pls
2645 4307 Pls
4886 3274 Pls
3145 2639 Pls
2517 4354 Pls
4061 2597 Pls
2261 3260 Pls
4954 3001 Pls
4948 2999 Pls
2878 1414 Pls
760 4480 Pls
3145 4297 Pls
3761 2551 Pls
2489 4223 Pls
3657 2615 Pls
2425 3724 Pls
2762 4106 Pls
4288 1697 Pls
3397 3962 Pls
4063 2573 Pls
3225 3830 Pls
2902 3955 Pls
4063 3527 Pls
4945 3028 Pls
4809 2911 Pls
3098 4126 Pls
2951 3104 Pls
2667 4287 Pls
4947 2993 Pls
3310 2871 Pls
2420 4306 Pls
3839 2541 Pls
3499 2064 Pls
3494 2923 Pls
2975 4226 Pls
1428 3947 Pls
3088 3182 Pls
2374 4319 Pls
2077 1769 Pls
2891 3111 Pls
4978 2967 Pls
2390 4242 Pls
3200 2489 Pls
2730 3938 Pls
3116 1389 Pls
4959 2990 Pls
2436 2851 Pls
2755 4133 Pls
3342 2370 Pls
2831 3579 Pls
2515 3509 Pls
2763 3537 Pls
2512 4346 Pls
2951 2922 Pls
3588 2211 Pls
3356 2563 Pls
4334 2716 Pls
2043 3322 Pls
2638 2918 Pls
4752 3143 Pls
4148 2712 Pls
4944 3003 Pls
4618 2910 Pls
2621 2328 Pls
2822 3537 Pls
3895 2595 Pls
2371 4411 Pls
3308 3495 Pls
3985 1737 Pls
4147 2231 Pls
2270 3928 Pls
3279 3830 Pls
1517 1805 Pls
3647 3525 Pls
3321 3948 Pls
1576 3421 Pls
2995 1047 Pls
4939 3033 Pls
2026 3326 Pls
2715 4087 Pls
2756 3825 Pls
3517 1214 Pls
4840 2959 Pls
3995 3621 Pls
1034 3676 Pls
3855 2901 Pls
1848 1217 Pls
4623 2863 Pls
4800 3086 Pls
1310 2313 Pls
3936 2708 Pls
2482 4301 Pls
3196 3979 Pls
4228 2286 Pls
3589 2124 Pls
3276 3946 Pls
4587 2754 Pls
2612 3933 Pls
4415 2735 Pls
4768 2951 Pls
4503 3081 Pls
2777 867 Pls
4682 4380 Pls
1718 3320 Pls
2367 4391 Pls
3696 3183 Pls
1355 3222 Pls
3887 3913 Pls
4884 2665 Pls
3309 4169 Pls
3810 1785 Pls
4707 3078 Pls
2597 4430 Pls
2839 2576 Pls
4443 3285 Pls
2979 2889 Pls
2897 955 Pls
1519 1580 Pls
2413 3239 Pls
1861 2688 Pls
4383 2776 Pls
3178 2371 Pls
4337 3553 Pls
3149 2264 Pls
4940 3033 Pls
3539 2202 Pls
3968 2567 Pls
1574 1555 Pls
3152 2879 Pls
3332 2433 Pls
4683 2979 Pls
3986 3643 Pls
5027 2460 Pls
3033 1317 Pls
2833 3056 Pls
2816 2559 Pls
3861 2629 Pls
2873 2344 Pls
4578 3217 Pls
4853 3069 Pls
2803 4242 Pls
2541 4356 Pls
2779 3459 Pls
2665 2695 Pls
1051 2627 Pls
2490 3088 Pls
3199 2396 Pls
1922 1494 Pls
4973 2957 Pls
2808 2391 Pls
2958 3617 Pls
2681 2318 Pls
2832 3548 Pls
2954 3818 Pls
2252 3705 Pls
2914 1071 Pls
4945 2998 Pls
1464 2797 Pls
4114 1592 Pls
3678 1875 Pls
2690 2151 Pls
1583 1781 Pls
3017 2574 Pls
3430 3366 Pls
4501 1428 Pls
3038 3097 Pls
3914 2016 Pls
3651 3767 Pls
2515 4343 Pls
4945 3075 Pls
3673 2481 Pls
2257 3924 Pls
4386 871 Pls
2607 4073 Pls
4088 2445 Pls
3038 2829 Pls
4079 2925 Pls
3231 1405 Pls
4959 2988 Pls
3435 3877 Pls
1632 3310 Pls
1740 3029 Pls
3301 2295 Pls
4769 2923 Pls
2657 4444 Pls
2700 3760 Pls
4580 3240 Pls
4061 3452 Pls
3923 2571 Pls
4580 2903 Pls
2610 3543 Pls
4189 3133 Pls
2286 3697 Pls
3167 1367 Pls
4355 1369 Pls
1189 2628 Pls
3807 3895 Pls
789 3114 Pls
2290 4154 Pls
3575 2519 Pls
3658 2487 Pls
2549 4360 Pls
2791 3658 Pls
3350 2666 Pls
2020 3481 Pls
3247 2553 Pls
3182 2184 Pls
3828 620 Pls
2660 4325 Pls
2440 3803 Pls
3294 3010 Pls
3187 4205 Pls
3699 1644 Pls
1576 3263 Pls
3769 1528 Pls
4456 2822 Pls
4986 2953 Pls
2532 4309 Pls
2691 2891 Pls
1854 1166 Pls
2411 4208 Pls
3718 3716 Pls
4130 1851 Pls
4698 2798 Pls
4719 3045 Pls
904 2276 Pls
2777 1594 Pls
4815 2893 Pls
2623 4047 Pls
2470 4344 Pls
2994 2294 Pls
2534 4353 Pls
2187 3671 Pls
4932 3143 Pls
4942 3066 Pls
2874 3191 Pls
2345 3035 Pls
2089 2791 Pls
3251 1248 Pls
2520 4036 Pls
2759 3565 Pls
4399 1686 Pls
% End plot #1
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
