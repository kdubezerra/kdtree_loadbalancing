%!PS-Adobe-2.0 EPSF-2.0
%%Title: avatarsdistribution.eps
%%Creator: gnuplot 4.4 patchlevel 2
%%CreationDate: Wed Feb  2 23:23:46 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 320 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (avatarsdistribution.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2)
  /Author (Eduardo)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Feb  2 23:23:46 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 320 50 lineto 320 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
% Encoding for ISO-8859-1 (also called Latin1)
%
/reencodeISO {
dup dup findfont dup length dict begin
{ 1 index /FID ne { def }{ pop pop } ifelse } forall
currentdict /CharStrings known {
	CharStrings /Idieresis known {
		/Encoding ISOLatin1Encoding def } if
} if
currentdict end definefont
} def
/ISOLatin1Encoding [
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
/parenleft/parenright/asterisk/plus/comma/minus/period/slash
/zero/one/two/three/four/five/six/seven/eight/nine/colon/semicolon
/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N
/O/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright
/asciicircum/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m
/n/o/p/q/r/s/t/u/v/w/x/y/z/braceleft/bar/braceright/asciitilde
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/dotlessi/grave/acute/circumflex/tilde/macron/breve
/dotaccent/dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut
/ogonek/caron/space/exclamdown/cent/sterling/currency/yen/brokenbar
/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot
/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior
/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine
/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute
/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis
/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave
/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex
/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis
/yacute/thorn/ydieresis
] def
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
/Helvetica reencodeISO def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
624 320 M
63 0 V
4424 0 R
-63 0 V
stroke
528 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
624 886 M
63 0 V
4424 0 R
-63 0 V
stroke
528 886 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
624 1452 M
63 0 V
4424 0 R
-63 0 V
stroke
528 1452 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MRshow
1.000 UL
LTb
624 2018 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2018 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
624 2584 M
63 0 V
4424 0 R
-63 0 V
stroke
528 2584 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MRshow
1.000 UL
LTb
624 3150 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3150 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MRshow
1.000 UL
LTb
624 3716 M
63 0 V
4424 0 R
-63 0 V
stroke
528 3716 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MRshow
1.000 UL
LTb
624 4282 M
63 0 V
4424 0 R
-63 0 V
stroke
528 4282 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MRshow
1.000 UL
LTb
624 320 M
0 63 V
0 4176 R
0 -63 V
stroke
624 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1223 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1223 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
1822 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1822 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MCshow
1.000 UL
LTb
2421 320 M
0 63 V
0 4176 R
0 -63 V
stroke
2421 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MCshow
1.000 UL
LTb
3020 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3020 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 400)]
] -53.3 MCshow
1.000 UL
LTb
3619 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3619 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 500)]
] -53.3 MCshow
1.000 UL
LTb
4218 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4218 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 600)]
] -53.3 MCshow
1.000 UL
LTb
4817 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4817 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 700)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
LCb setrgbcolor
LTb
LCb setrgbcolor
LTb
2867 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (1500 players, 3 hotspots, 90% chance of choosing one as waypoint)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
2440 3933 Pls
4797 3083 Pls
3280 3958 Pls
2875 3386 Pls
3352 3993 Pls
3523 1167 Pls
2824 4267 Pls
3013 3055 Pls
1550 4151 Pls
2709 3754 Pls
4355 3343 Pls
2758 3793 Pls
4929 3102 Pls
2750 3715 Pls
4618 3196 Pls
2688 3894 Pls
4362 3343 Pls
2796 4267 Pls
3924 2641 Pls
2026 4114 Pls
3719 3723 Pls
2896 4219 Pls
2958 3125 Pls
2816 3669 Pls
3929 2085 Pls
2446 3736 Pls
3443 2460 Pls
2925 4194 Pls
2654 4355 Pls
4100 2639 Pls
2770 3505 Pls
2711 3893 Pls
3101 2449 Pls
4505 2816 Pls
3050 2638 Pls
3225 4000 Pls
4576 3064 Pls
2524 4348 Pls
2327 1997 Pls
2864 3292 Pls
4749 2994 Pls
3367 2347 Pls
3334 2388 Pls
2009 3417 Pls
3290 2510 Pls
3645 3765 Pls
4829 3154 Pls
2512 4352 Pls
3015 3169 Pls
3364 2344 Pls
4789 2944 Pls
3246 2412 Pls
2795 3704 Pls
2886 2735 Pls
2495 2676 Pls
4945 2998 Pls
3493 2595 Pls
2240 1167 Pls
4998 2123 Pls
3541 2815 Pls
3216 2431 Pls
2760 3692 Pls
4948 2998 Pls
2536 4351 Pls
4959 2976 Pls
1611 3044 Pls
3148 2315 Pls
2848 4213 Pls
1230 3514 Pls
4789 3172 Pls
3583 3802 Pls
4960 2981 Pls
2985 4171 Pls
3087 2831 Pls
3062 4098 Pls
2694 3911 Pls
2582 4392 Pls
2863 4243 Pls
3221 2408 Pls
4922 2989 Pls
2951 3177 Pls
3881 2993 Pls
2463 4341 Pls
4928 3390 Pls
4959 3087 Pls
3794 3730 Pls
3036 4121 Pls
1805 3253 Pls
2499 2357 Pls
2831 3532 Pls
4831 3152 Pls
3367 2351 Pls
4725 3171 Pls
3587 3841 Pls
2202 4346 Pls
5029 2927 Pls
3059 3070 Pls
4584 3293 Pls
3017 2298 Pls
2845 3451 Pls
2848 3435 Pls
4469 3276 Pls
3360 2345 Pls
3720 3798 Pls
2424 3815 Pls
3785 2512 Pls
2513 4349 Pls
1249 526 Pls
2800 4252 Pls
2827 4307 Pls
2779 4279 Pls
3356 3936 Pls
4660 2869 Pls
4725 2922 Pls
4945 3052 Pls
3898 3605 Pls
3534 2630 Pls
4884 2949 Pls
3279 2420 Pls
4263 3435 Pls
4110 3087 Pls
3171 2230 Pls
3376 2282 Pls
4945 2998 Pls
4591 3395 Pls
2542 4295 Pls
3146 4083 Pls
3175 2529 Pls
2633 4137 Pls
4956 3002 Pls
4614 2861 Pls
4922 3108 Pls
4628 2736 Pls
3540 3823 Pls
2831 4242 Pls
4769 3182 Pls
1614 4195 Pls
2416 4194 Pls
3439 3914 Pls
3248 2624 Pls
1930 1956 Pls
2955 4070 Pls
2801 3688 Pls
3995 2574 Pls
4212 2691 Pls
3817 2582 Pls
2575 4401 Pls
3224 2406 Pls
3055 4131 Pls
3023 4067 Pls
2948 3006 Pls
4885 3012 Pls
4185 3503 Pls
2945 3153 Pls
3080 2121 Pls
3032 2512 Pls
5006 2935 Pls
4980 2959 Pls
2756 3859 Pls
3938 2652 Pls
3753 2507 Pls
4449 2802 Pls
2581 4392 Pls
3990 2700 Pls
3630 2438 Pls
4898 2976 Pls
4004 3540 Pls
3214 2439 Pls
2608 4292 Pls
3823 2608 Pls
4832 3067 Pls
3121 2935 Pls
3936 3615 Pls
2759 3791 Pls
3118 4037 Pls
3706 3722 Pls
4857 3138 Pls
4692 2911 Pls
4946 3068 Pls
2737 4307 Pls
4977 2966 Pls
3745 3705 Pls
4144 3523 Pls
4949 2992 Pls
2665 4233 Pls
3455 1743 Pls
1642 1347 Pls
2594 4362 Pls
1489 4479 Pls
3214 2701 Pls
3384 3914 Pls
4079 3562 Pls
3034 2166 Pls
4687 3232 Pls
4557 3676 Pls
3377 2295 Pls
3205 2396 Pls
2705 4219 Pls
4018 3545 Pls
4769 2930 Pls
4957 2980 Pls
2575 4396 Pls
3858 2541 Pls
3261 3752 Pls
3431 2361 Pls
3281 3081 Pls
3468 2720 Pls
2657 4352 Pls
2616 4375 Pls
2659 4156 Pls
3225 2409 Pls
2598 4068 Pls
4238 3865 Pls
2575 4208 Pls
3472 3863 Pls
3798 2685 Pls
2654 4037 Pls
3281 3997 Pls
4904 2978 Pls
4185 3495 Pls
2578 4397 Pls
4505 3028 Pls
3305 2430 Pls
4566 2922 Pls
2615 4133 Pls
2565 4328 Pls
1470 1904 Pls
3443 4123 Pls
3368 3962 Pls
2775 3538 Pls
2882 4215 Pls
3173 2803 Pls
4588 2866 Pls
2841 2278 Pls
3731 3741 Pls
4091 3502 Pls
3978 3685 Pls
2018 1464 Pls
4899 3258 Pls
3784 2544 Pls
3393 2427 Pls
2862 3366 Pls
4952 3090 Pls
4944 3018 Pls
2961 3051 Pls
4332 2799 Pls
3430 2906 Pls
4945 3086 Pls
2723 3957 Pls
3052 2816 Pls
2618 4370 Pls
4955 3089 Pls
3221 2407 Pls
3212 4170 Pls
3700 2670 Pls
2638 4252 Pls
4298 2730 Pls
3533 3825 Pls
3699 2482 Pls
3885 1441 Pls
4040 2397 Pls
4746 3108 Pls
2703 3883 Pls
3362 2344 Pls
4237 2702 Pls
2620 4372 Pls
3751 3719 Pls
2483 4339 Pls
3189 2474 Pls
4954 3090 Pls
1824 4313 Pls
2556 2530 Pls
3544 2430 Pls
3464 3858 Pls
3607 3785 Pls
4711 2916 Pls
4907 2779 Pls
2581 4393 Pls
3087 2806 Pls
3832 3644 Pls
3775 3341 Pls
2812 4172 Pls
3984 2668 Pls
2924 3333 Pls
4952 2987 Pls
3455 2381 Pls
2844 4246 Pls
4764 3303 Pls
4507 3320 Pls
4846 3051 Pls
3327 4171 Pls
2994 3232 Pls
3811 2525 Pls
2517 4351 Pls
2770 3656 Pls
2829 3672 Pls
3399 2357 Pls
3105 4046 Pls
2695 3759 Pls
3175 2224 Pls
3152 2253 Pls
2668 3941 Pls
4074 3546 Pls
1250 3567 Pls
4154 3500 Pls
3003 4144 Pls
2595 4316 Pls
4139 2541 Pls
3051 3101 Pls
3361 2342 Pls
2518 4349 Pls
4005 2607 Pls
3357 3800 Pls
4655 3040 Pls
2667 3868 Pls
4286 3384 Pls
2622 4324 Pls
3524 3880 Pls
4355 2750 Pls
4860 3146 Pls
3442 3876 Pls
2811 3422 Pls
4125 2651 Pls
3961 2842 Pls
3722 3757 Pls
3096 2798 Pls
4883 2516 Pls
3857 3673 Pls
2763 4295 Pls
4921 2988 Pls
2582 4393 Pls
1808 4189 Pls
3594 1934 Pls
3897 3654 Pls
3988 2211 Pls
2674 4010 Pls
3732 3723 Pls
2730 3857 Pls
4962 1853 Pls
2905 3289 Pls
3852 2543 Pls
2670 4043 Pls
3103 3661 Pls
3766 3244 Pls
4214 3417 Pls
3362 2341 Pls
1887 3767 Pls
4760 2920 Pls
1548 3079 Pls
3367 2348 Pls
4956 3088 Pls
4867 3136 Pls
3364 2339 Pls
4598 2840 Pls
2796 4278 Pls
3215 2394 Pls
3394 2352 Pls
2650 3940 Pls
3796 3762 Pls
2522 3788 Pls
3223 2401 Pls
4039 2617 Pls
3672 2475 Pls
2757 1941 Pls
2572 4317 Pls
4189 2725 Pls
2439 4229 Pls
4253 2710 Pls
2649 4002 Pls
4582 3211 Pls
3078 2861 Pls
3067 2660 Pls
4952 2996 Pls
4652 2844 Pls
4958 3088 Pls
2964 4166 Pls
3028 2950 Pls
3220 2406 Pls
4468 2572 Pls
4209 3466 Pls
2995 2762 Pls
2787 3750 Pls
4065 3606 Pls
3143 2639 Pls
4613 2871 Pls
3321 3987 Pls
2966 4182 Pls
4115 2625 Pls
2806 3452 Pls
3283 3972 Pls
4569 3282 Pls
3276 3968 Pls
4247 2705 Pls
2772 3741 Pls
2579 4395 Pls
2955 4190 Pls
2960 3134 Pls
2697 2090 Pls
2736 3773 Pls
3359 2342 Pls
3663 1881 Pls
4449 2794 Pls
2881 4231 Pls
4278 1574 Pls
3402 3895 Pls
3901 3624 Pls
4243 3395 Pls
4122 2104 Pls
3720 2520 Pls
4954 2992 Pls
4958 2992 Pls
3331 2219 Pls
4415 3362 Pls
4350 2474 Pls
3790 3682 Pls
4172 3530 Pls
4778 3104 Pls
2939 3193 Pls
3110 2712 Pls
2595 4423 Pls
2693 3949 Pls
2687 3743 Pls
2514 4347 Pls
4679 2890 Pls
4703 3140 Pls
3626 2449 Pls
2140 3901 Pls
4514 3247 Pls
2580 4393 Pls
2976 2857 Pls
3031 2727 Pls
3954 2593 Pls
3098 2753 Pls
3275 3977 Pls
3370 2341 Pls
3474 2377 Pls
3044 2897 Pls
2680 3890 Pls
2965 3064 Pls
3200 2451 Pls
3368 2346 Pls
2580 4400 Pls
4876 2963 Pls
2522 4318 Pls
4071 2619 Pls
2784 3669 Pls
1786 3660 Pls
3063 2282 Pls
2922 3207 Pls
4417 3307 Pls
3310 2474 Pls
4954 3093 Pls
3625 3813 Pls
3218 2407 Pls
3438 2411 Pls
4810 2936 Pls
2994 2150 Pls
3754 2491 Pls
2592 4360 Pls
3668 3741 Pls
4931 3076 Pls
1710 3921 Pls
3294 2278 Pls
2594 4307 Pls
2739 3653 Pls
3848 3645 Pls
2388 4395 Pls
3804 3723 Pls
2777 3792 Pls
4760 3108 Pls
4460 2788 Pls
2768 2398 Pls
4951 2999 Pls
3675 2474 Pls
3735 2631 Pls
3446 2369 Pls
4736 3204 Pls
3228 2663 Pls
2756 3710 Pls
4505 1871 Pls
3222 2415 Pls
3230 3964 Pls
3433 3879 Pls
4675 2857 Pls
4798 2918 Pls
4956 3089 Pls
2519 4349 Pls
3528 2505 Pls
4386 2826 Pls
2615 2754 Pls
3402 3901 Pls
2579 4394 Pls
4951 2992 Pls
3888 3102 Pls
3395 2432 Pls
3363 2346 Pls
3977 2608 Pls
4526 2819 Pls
2582 4393 Pls
1520 3434 Pls
3021 3023 Pls
2135 3479 Pls
5024 2928 Pls
4181 3475 Pls
3206 2430 Pls
2300 3179 Pls
2525 4346 Pls
4076 3549 Pls
3924 2697 Pls
2373 788 Pls
2481 781 Pls
3052 2618 Pls
4211 3436 Pls
3681 2478 Pls
4353 3422 Pls
4387 2792 Pls
3961 2655 Pls
2987 4073 Pls
2310 3424 Pls
3520 3721 Pls
4673 3164 Pls
3216 2406 Pls
2935 3172 Pls
2669 3944 Pls
4196 3506 Pls
3957 2548 Pls
3728 2381 Pls
4481 2806 Pls
3358 2370 Pls
3800 3692 Pls
3222 2407 Pls
3086 2119 Pls
2492 4349 Pls
3228 3949 Pls
3223 2404 Pls
3090 2613 Pls
2685 1906 Pls
4568 3289 Pls
2575 4396 Pls
2959 3049 Pls
3424 1795 Pls
3837 3650 Pls
4052 2667 Pls
3332 2389 Pls
4948 2992 Pls
3062 4159 Pls
2510 4346 Pls
957 1160 Pls
3032 2888 Pls
4714 3134 Pls
4553 2596 Pls
2554 4364 Pls
2491 4258 Pls
2645 4362 Pls
4946 2999 Pls
3617 3760 Pls
4341 2748 Pls
4799 3175 Pls
2616 3865 Pls
2525 4347 Pls
4956 3000 Pls
2628 4275 Pls
2725 3665 Pls
3364 2348 Pls
4080 3599 Pls
2736 3753 Pls
4203 3248 Pls
1544 1177 Pls
2996 3229 Pls
3610 2534 Pls
3813 3673 Pls
2414 3925 Pls
2801 3689 Pls
3149 2626 Pls
2732 4311 Pls
4516 2843 Pls
3225 2398 Pls
2256 3924 Pls
3253 3991 Pls
3288 2411 Pls
4683 2887 Pls
3217 2404 Pls
3293 2422 Pls
1324 3632 Pls
4450 2826 Pls
3971 3631 Pls
2939 2262 Pls
4802 3078 Pls
2960 3176 Pls
2912 3269 Pls
3673 3845 Pls
3181 2533 Pls
3629 1663 Pls
2219 3757 Pls
4844 3145 Pls
2905 3275 Pls
2735 3915 Pls
2676 3793 Pls
4431 2789 Pls
3364 2349 Pls
2555 4370 Pls
2471 4342 Pls
4766 1863 Pls
3507 2402 Pls
4960 2971 Pls
2842 4238 Pls
3637 2475 Pls
4517 3307 Pls
2005 3218 Pls
2673 3986 Pls
4864 2099 Pls
4955 3089 Pls
4434 3360 Pls
3480 2406 Pls
2698 3899 Pls
3791 2522 Pls
2564 4371 Pls
3900 2487 Pls
3360 2450 Pls
4113 2689 Pls
2770 3812 Pls
2583 4392 Pls
3360 2360 Pls
3096 4043 Pls
4862 3138 Pls
2910 4121 Pls
3489 2407 Pls
4187 2630 Pls
2555 4275 Pls
4728 2880 Pls
3117 2697 Pls
4938 3100 Pls
3025 3159 Pls
2643 4003 Pls
3769 3741 Pls
4428 2797 Pls
4046 2252 Pls
3037 2979 Pls
3891 2556 Pls
4939 3051 Pls
4101 2690 Pls
2514 4348 Pls
2601 4209 Pls
3098 2745 Pls
2857 3374 Pls
4403 2834 Pls
2954 3102 Pls
3327 2228 Pls
2436 4352 Pls
2545 4299 Pls
3487 3858 Pls
4943 3044 Pls
2624 4313 Pls
3016 4136 Pls
2661 4149 Pls
3566 2412 Pls
2453 4344 Pls
3016 2990 Pls
3314 1292 Pls
3183 4101 Pls
2578 4158 Pls
3365 2347 Pls
4948 2992 Pls
4389 3339 Pls
4672 1897 Pls
4952 2994 Pls
5050 2924 Pls
3364 2346 Pls
4955 2989 Pls
2576 4396 Pls
2178 3072 Pls
3220 2405 Pls
3079 4117 Pls
2839 4237 Pls
2910 3463 Pls
4439 3363 Pls
4280 3429 Pls
3467 1738 Pls
4538 2705 Pls
3282 2532 Pls
2594 4359 Pls
3091 2766 Pls
3226 4053 Pls
4248 2702 Pls
4545 3234 Pls
2730 4242 Pls
2881 3299 Pls
3594 2511 Pls
3361 2347 Pls
2972 3953 Pls
3702 1764 Pls
2369 4426 Pls
3556 2429 Pls
4495 2807 Pls
3537 2432 Pls
4943 3005 Pls
2541 2101 Pls
2885 3335 Pls
4670 3252 Pls
4956 3090 Pls
2606 4380 Pls
4005 2675 Pls
2960 3160 Pls
3646 2654 Pls
4652 2879 Pls
2954 3059 Pls
4070 2626 Pls
3366 2348 Pls
3092 2985 Pls
3359 2347 Pls
2527 4308 Pls
3207 4020 Pls
3672 2471 Pls
3365 2339 Pls
2748 3796 Pls
4378 2822 Pls
3470 2232 Pls
3279 1379 Pls
4249 3393 Pls
2805 4257 Pls
4957 3087 Pls
3385 2356 Pls
3171 2370 Pls
3929 3657 Pls
4800 2883 Pls
4765 2930 Pls
1364 3844 Pls
2789 3504 Pls
3052 2868 Pls
3684 2495 Pls
4951 2996 Pls
3600 2644 Pls
4488 2767 Pls
2460 4345 Pls
2620 4112 Pls
3211 2438 Pls
2883 3146 Pls
3661 2447 Pls
2816 3499 Pls
4568 3293 Pls
3181 4064 Pls
2942 3112 Pls
3178 4065 Pls
3803 2523 Pls
3078 3019 Pls
3747 2531 Pls
4699 2758 Pls
3683 3731 Pls
4732 2896 Pls
2804 3503 Pls
3313 3970 Pls
2595 3195 Pls
3995 3605 Pls
4613 3260 Pls
3273 4015 Pls
2574 4400 Pls
4215 2745 Pls
4729 2958 Pls
3083 4095 Pls
2520 4352 Pls
2923 4215 Pls
4870 2948 Pls
4952 2986 Pls
4833 3149 Pls
2903 3290 Pls
1892 2581 Pls
4042 4395 Pls
3074 4100 Pls
3848 2497 Pls
3075 4099 Pls
2695 4038 Pls
3666 2367 Pls
2821 3646 Pls
3860 3090 Pls
2570 4168 Pls
3501 3822 Pls
3519 2401 Pls
2653 4320 Pls
3774 2830 Pls
3053 4111 Pls
2885 3329 Pls
3193 2467 Pls
3557 3814 Pls
3029 4239 Pls
3408 3894 Pls
2720 2440 Pls
4942 3007 Pls
4870 2963 Pls
3219 2405 Pls
3674 2480 Pls
4317 3410 Pls
3014 2992 Pls
3995 3584 Pls
2575 4396 Pls
2990 3193 Pls
4076 3570 Pls
3656 2112 Pls
3368 2345 Pls
3613 3767 Pls
2906 3631 Pls
4769 3186 Pls
3703 2483 Pls
4952 2994 Pls
2892 4209 Pls
4795 3827 Pls
2609 4299 Pls
2516 4355 Pls
2565 4054 Pls
3103 2969 Pls
2553 4228 Pls
3163 2828 Pls
870 1765 Pls
2893 3475 Pls
2583 4398 Pls
3172 2221 Pls
3459 2384 Pls
2582 4391 Pls
4914 3033 Pls
2522 4347 Pls
4444 3293 Pls
3365 2344 Pls
2123 2326 Pls
2442 4345 Pls
2706 1324 Pls
4528 1842 Pls
5043 2926 Pls
4676 3158 Pls
4022 3536 Pls
4565 3291 Pls
4303 3426 Pls
3468 3887 Pls
2578 4171 Pls
4134 3476 Pls
3667 2511 Pls
4925 2963 Pls
3574 3803 Pls
3257 3986 Pls
2271 4073 Pls
2714 4317 Pls
3380 2435 Pls
4004 2533 Pls
3312 3961 Pls
2936 4209 Pls
4253 3455 Pls
2838 2978 Pls
3436 3877 Pls
3393 3899 Pls
3889 3621 Pls
4702 3215 Pls
3422 3922 Pls
4811 2936 Pls
4357 2755 Pls
3376 3931 Pls
2883 3498 Pls
4946 2997 Pls
2537 4341 Pls
4570 3316 Pls
3854 2562 Pls
3672 3751 Pls
4983 3120 Pls
3897 2638 Pls
4104 3492 Pls
4548 3243 Pls
3471 2388 Pls
2573 750 Pls
4394 3373 Pls
4587 3206 Pls
2582 4391 Pls
4273 2861 Pls
4072 2684 Pls
2588 4277 Pls
3522 2407 Pls
3382 3954 Pls
2581 4392 Pls
2458 4341 Pls
3554 3808 Pls
4740 3203 Pls
2647 4152 Pls
2970 3111 Pls
2587 3329 Pls
2529 4352 Pls
4207 3121 Pls
4359 2777 Pls
5039 2933 Pls
2699 4325 Pls
1682 3375 Pls
2532 4314 Pls
3744 3342 Pls
3538 2511 Pls
2584 4393 Pls
2960 1905 Pls
3716 3712 Pls
3655 3758 Pls
4702 3220 Pls
3173 2429 Pls
3196 2740 Pls
3155 4027 Pls
3011 4149 Pls
2731 4219 Pls
2870 2468 Pls
4341 2689 Pls
2998 3084 Pls
3399 461 Pls
3741 2500 Pls
2592 3567 Pls
3254 1577 Pls
2294 3097 Pls
4862 3141 Pls
4556 2856 Pls
2580 4393 Pls
3115 2472 Pls
2599 4135 Pls
4509 3318 Pls
2998 3102 Pls
3363 2348 Pls
3477 2394 Pls
3218 2403 Pls
3002 3175 Pls
2984 3247 Pls
2516 3215 Pls
2960 4163 Pls
4468 2797 Pls
2578 4220 Pls
3324 3956 Pls
3029 2946 Pls
3222 2407 Pls
2804 1925 Pls
2996 4100 Pls
1951 2579 Pls
4589 3274 Pls
2932 4187 Pls
4521 2810 Pls
4474 1793 Pls
4574 2833 Pls
3074 3036 Pls
2962 3184 Pls
2519 4346 Pls
2550 4370 Pls
3367 2346 Pls
3072 2816 Pls
3611 3431 Pls
2800 4288 Pls
3133 2650 Pls
3865 2547 Pls
2584 4166 Pls
2711 2963 Pls
2608 4268 Pls
3001 3021 Pls
2590 4381 Pls
3992 2665 Pls
4832 3911 Pls
5016 2931 Pls
3857 2803 Pls
4083 2749 Pls
3298 1742 Pls
2622 3837 Pls
3645 1355 Pls
3569 2921 Pls
4831 2953 Pls
4944 3006 Pls
4276 3392 Pls
2576 4396 Pls
4965 2894 Pls
3652 2369 Pls
3413 3373 Pls
3886 2558 Pls
4568 3289 Pls
2650 4354 Pls
5008 2934 Pls
2959 4119 Pls
4926 2989 Pls
2630 4371 Pls
2582 4391 Pls
2962 3215 Pls
3366 2340 Pls
4261 3471 Pls
4117 4352 Pls
3524 2416 Pls
4166 3489 Pls
4523 2818 Pls
3729 2169 Pls
4221 3044 Pls
2721 3930 Pls
4509 3253 Pls
4603 3196 Pls
3340 2045 Pls
2783 3608 Pls
3515 3832 Pls
2579 4397 Pls
3207 3990 Pls
4745 2989 Pls
3146 2579 Pls
3221 2405 Pls
4056 3523 Pls
1236 2114 Pls
1881 3779 Pls
2661 3622 Pls
2622 4057 Pls
4260 2761 Pls
2485 999 Pls
3238 2655 Pls
3198 2456 Pls
2613 4043 Pls
3010 2983 Pls
3761 2179 Pls
4744 3119 Pls
2696 4034 Pls
3247 2411 Pls
2575 4396 Pls
4956 3090 Pls
1820 2955 Pls
3104 2717 Pls
3846 2574 Pls
3411 2361 Pls
2713 4211 Pls
3778 2598 Pls
4606 2881 Pls
4211 2689 Pls
2511 4353 Pls
3218 2404 Pls
4414 3313 Pls
2954 4172 Pls
3169 2542 Pls
2894 3261 Pls
4958 3088 Pls
4892 2942 Pls
3260 3992 Pls
4954 3001 Pls
4587 3677 Pls
2470 4340 Pls
2219 3618 Pls
4370 4339 Pls
3221 2408 Pls
4947 2992 Pls
2512 4352 Pls
4962 3084 Pls
4043 2785 Pls
2991 3135 Pls
4261 2406 Pls
3113 4043 Pls
2731 3964 Pls
4948 2999 Pls
1531 3715 Pls
2608 4321 Pls
3684 3084 Pls
4958 2990 Pls
3369 2345 Pls
3205 3073 Pls
2871 3495 Pls
3179 2588 Pls
2523 4350 Pls
3078 3135 Pls
4624 2873 Pls
2728 3933 Pls
4949 3082 Pls
1239 2197 Pls
4309 2729 Pls
3334 2387 Pls
2412 2417 Pls
2574 4398 Pls
2186 2633 Pls
2624 4108 Pls
2989 3243 Pls
2613 4155 Pls
2939 4108 Pls
3302 3941 Pls
3011 2985 Pls
2623 4057 Pls
4856 3058 Pls
2207 3331 Pls
4296 3444 Pls
2638 4077 Pls
4638 3254 Pls
3245 2634 Pls
3042 4073 Pls
2560 4326 Pls
4961 2979 Pls
2594 4154 Pls
4229 3468 Pls
3364 3518 Pls
3195 4029 Pls
3795 2520 Pls
2839 4268 Pls
2551 3645 Pls
3114 2691 Pls
2522 4348 Pls
3763 2554 Pls
3653 2464 Pls
1910 1427 Pls
3897 2564 Pls
2629 4330 Pls
2437 4347 Pls
3507 3965 Pls
4909 2122 Pls
5009 3546 Pls
4866 3139 Pls
2781 1269 Pls
4176 3496 Pls
2999 4165 Pls
5026 2926 Pls
3052 2887 Pls
3930 3746 Pls
3143 2616 Pls
4775 3182 Pls
3246 2415 Pls
3022 4089 Pls
2421 4355 Pls
3221 2407 Pls
4106 3481 Pls
3332 3950 Pls
2660 3810 Pls
5026 2931 Pls
4956 3096 Pls
4812 2878 Pls
2338 3809 Pls
3153 4083 Pls
3928 1838 Pls
2424 2208 Pls
3748 2502 Pls
3185 2516 Pls
2594 4138 Pls
3221 2407 Pls
4690 3216 Pls
2445 4345 Pls
3512 2405 Pls
3324 2452 Pls
5046 2928 Pls
2524 4342 Pls
3282 3961 Pls
3703 3729 Pls
2921 3392 Pls
2424 3812 Pls
3180 2224 Pls
2917 3253 Pls
3431 3368 Pls
2557 4365 Pls
4949 2992 Pls
2813 3646 Pls
2310 4127 Pls
2175 2326 Pls
3221 2407 Pls
3025 2949 Pls
2586 4366 Pls
2546 4297 Pls
2549 2687 Pls
2575 1680 Pls
4254 2409 Pls
3027 3066 Pls
1530 875 Pls
2856 3417 Pls
1546 4057 Pls
4723 2977 Pls
4274 3394 Pls
2005 3383 Pls
3296 1743 Pls
3448 3918 Pls
3219 2400 Pls
4498 3353 Pls
3368 2345 Pls
4814 2942 Pls
2535 4356 Pls
4950 3087 Pls
4028 3527 Pls
3148 4006 Pls
4397 2585 Pls
3679 3768 Pls
4421 2808 Pls
2757 4310 Pls
3418 2361 Pls
3955 2890 Pls
2443 4345 Pls
4902 3619 Pls
3825 3671 Pls
3041 2904 Pls
3584 3794 Pls
2927 2096 Pls
4063 2669 Pls
2902 3405 Pls
3171 2766 Pls
4699 2800 Pls
5007 3813 Pls
4055 3549 Pls
2883 3232 Pls
3224 2398 Pls
3144 2660 Pls
3220 2404 Pls
2506 4347 Pls
4909 3112 Pls
3576 2431 Pls
4589 2814 Pls
2522 4348 Pls
3887 2920 Pls
3578 2563 Pls
3362 2345 Pls
3735 3714 Pls
3356 1752 Pls
3194 2458 Pls
4602 2874 Pls
3212 2700 Pls
2562 4237 Pls
4784 3093 Pls
4073 1341 Pls
2905 3273 Pls
2786 2484 Pls
3820 2718 Pls
4592 2919 Pls
3297 2195 Pls
2919 2801 Pls
2949 3259 Pls
3170 3175 Pls
3158 2588 Pls
3291 2533 Pls
2580 4393 Pls
2904 3424 Pls
4229 2742 Pls
3243 3946 Pls
2523 4352 Pls
2626 4105 Pls
4644 3164 Pls
4956 3088 Pls
2727 3863 Pls
4952 2992 Pls
4166 3244 Pls
2898 3353 Pls
4192 3469 Pls
2443 4347 Pls
2506 4343 Pls
4559 3293 Pls
4088 2859 Pls
3834 2733 Pls
3007 3114 Pls
4953 2987 Pls
814 2100 Pls
3094 2734 Pls
2635 4041 Pls
4638 3253 Pls
2816 3671 Pls
956 1536 Pls
3939 2650 Pls
4228 2700 Pls
4961 3087 Pls
3251 1595 Pls
2733 4242 Pls
2559 4241 Pls
2276 3806 Pls
3402 2367 Pls
4588 3278 Pls
4253 637 Pls
2809 3545 Pls
4295 3422 Pls
4360 2804 Pls
4964 2982 Pls
4266 3467 Pls
3335 1580 Pls
4961 3092 Pls
2845 3452 Pls
1703 4263 Pls
3148 2342 Pls
2759 1636 Pls
4952 3090 Pls
3644 3765 Pls
2926 3226 Pls
2890 3474 Pls
4780 3980 Pls
2426 3423 Pls
2976 3223 Pls
2533 3944 Pls
4742 3154 Pls
3637 3773 Pls
4099 3558 Pls
4850 3042 Pls
2577 4402 Pls
2554 4368 Pls
3204 2205 Pls
4751 2915 Pls
4796 3082 Pls
3219 4013 Pls
4019 1875 Pls
3698 2411 Pls
2764 3522 Pls
4185 3140 Pls
4373 2800 Pls
1395 2086 Pls
2566 4377 Pls
3218 2407 Pls
3283 3953 Pls
3864 2583 Pls
2436 4352 Pls
4146 2615 Pls
2585 4410 Pls
3223 2399 Pls
2986 4225 Pls
2794 1408 Pls
2475 4256 Pls
4020 2556 Pls
2843 3446 Pls
2541 2204 Pls
4951 2986 Pls
4599 2773 Pls
3770 3297 Pls
4393 3399 Pls
2059 1263 Pls
3584 1624 Pls
2981 4163 Pls
4956 3089 Pls
3407 1036 Pls
3435 1856 Pls
2812 3663 Pls
2615 4134 Pls
3364 2343 Pls
4954 3088 Pls
2598 4444 Pls
4702 2885 Pls
2515 4346 Pls
4696 2971 Pls
3354 2476 Pls
2937 3167 Pls
3858 3691 Pls
2873 4140 Pls
3895 2563 Pls
4890 2979 Pls
4434 3387 Pls
3702 2222 Pls
3289 2537 Pls
3367 2351 Pls
2784 4283 Pls
4781 3182 Pls
1742 2267 Pls
2721 3882 Pls
3583 2526 Pls
3499 2405 Pls
1158 2238 Pls
4781 3184 Pls
3064 2809 Pls
3309 3963 Pls
3430 3299 Pls
4958 3086 Pls
2515 4349 Pls
3662 3790 Pls
3914 3612 Pls
2884 3323 Pls
4811 3168 Pls
3265 3026 Pls
4812 3076 Pls
3004 2987 Pls
3033 3137 Pls
2605 4416 Pls
3926 2571 Pls
2760 3785 Pls
4388 3308 Pls
2923 4138 Pls
4521 2859 Pls
2573 4228 Pls
2593 4386 Pls
4661 2878 Pls
2652 4241 Pls
4958 3088 Pls
2463 2291 Pls
2981 3160 Pls
3063 2843 Pls
2678 3863 Pls
2998 4188 Pls
3860 3380 Pls
2581 4392 Pls
2646 2558 Pls
3149 2570 Pls
3201 2475 Pls
4757 2914 Pls
2843 3518 Pls
4301 3381 Pls
3826 3663 Pls
3739 2595 Pls
4717 1983 Pls
3373 3924 Pls
2514 4344 Pls
3922 2643 Pls
2579 4400 Pls
3333 3474 Pls
3924 3629 Pls
3171 2075 Pls
3492 3855 Pls
2734 3761 Pls
2520 4344 Pls
2745 4303 Pls
3224 2404 Pls
1292 2654 Pls
4759 2796 Pls
2961 4166 Pls
4221 2692 Pls
4488 2808 Pls
2911 3144 Pls
4644 2941 Pls
2760 3505 Pls
3457 3880 Pls
2833 3499 Pls
4537 2824 Pls
4777 2910 Pls
3338 2417 Pls
2148 2892 Pls
3897 2637 Pls
4951 2987 Pls
3675 3799 Pls
3152 3995 Pls
2842 3581 Pls
3593 3809 Pls
4527 2755 Pls
2685 2047 Pls
2777 3628 Pls
3359 2249 Pls
4360 3337 Pls
4142 2369 Pls
5001 2943 Pls
3600 2497 Pls
4810 3076 Pls
3365 2350 Pls
2753 3558 Pls
4730 3125 Pls
4605 2824 Pls
3206 2452 Pls
4436 2781 Pls
4948 3058 Pls
3704 2465 Pls
2453 4343 Pls
3200 2445 Pls
1244 3152 Pls
3727 3721 Pls
1962 1614 Pls
4950 3064 Pls
4487 2912 Pls
4570 2871 Pls
4953 3090 Pls
4207 3430 Pls
3503 2402 Pls
2579 4401 Pls
4149 3466 Pls
2774 3789 Pls
4258 2871 Pls
3640 3755 Pls
2610 4283 Pls
2824 3600 Pls
3641 2798 Pls
2522 4347 Pls
4611 2856 Pls
3980 3381 Pls
3539 3860 Pls
3923 2575 Pls
2754 2645 Pls
3328 2425 Pls
4568 3201 Pls
4368 2793 Pls
4264 3447 Pls
3987 2294 Pls
2623 4015 Pls
4955 3091 Pls
2734 4244 Pls
4023 3570 Pls
4311 3423 Pls
3029 3089 Pls
3223 2407 Pls
3139 2888 Pls
2525 4347 Pls
4859 2999 Pls
2516 4355 Pls
2520 4325 Pls
3815 4362 Pls
1296 4211 Pls
3257 3991 Pls
2629 3667 Pls
3232 2656 Pls
3280 2554 Pls
3079 2793 Pls
2161 3654 Pls
3335 2418 Pls
3503 3847 Pls
2583 4167 Pls
2882 3223 Pls
3904 2641 Pls
4603 2875 Pls
2909 3268 Pls
4298 3425 Pls
2526 4332 Pls
2687 3881 Pls
2593 4182 Pls
3689 2353 Pls
3560 3829 Pls
4424 3365 Pls
2665 3406 Pls
2703 3729 Pls
4700 2869 Pls
4136 3979 Pls
2941 3186 Pls
2012 3502 Pls
3122 2697 Pls
3869 3653 Pls
2659 4002 Pls
3380 2452 Pls
1503 1233 Pls
4959 2993 Pls
3059 2895 Pls
4456 3297 Pls
% End plot #1
1.000 UL
LTb
624 4559 N
624 320 L
4487 0 V
0 4239 V
-4487 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
